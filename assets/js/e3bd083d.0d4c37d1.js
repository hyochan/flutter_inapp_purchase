"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[9904],{1709:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"guides/troubleshooting","title":"Troubleshooting","description":"This guide covers common issues you might encounter when implementing in-app purchases with flutterinapppurchase and how to resolve them.","source":"@site/versioned_docs/version-7.0/guides/troubleshooting.md","sourceDirName":"guides","slug":"/guides/troubleshooting","permalink":"/flutter_inapp_purchase/docs/7.0/guides/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/versioned_docs/version-7.0/guides/troubleshooting.md","tags":[],"version":"7.0","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"Troubleshooting"}}');var r=s(4848),t=s(8453);const a={sidebar_position:7,title:"Troubleshooting"},o="Troubleshooting",l={},c=[{value:"Prerequisites Checklist",id:"prerequisites-checklist",level:2},{value:"App Store Setup (iOS)",id:"app-store-setup-ios",level:3},{value:"Google Play Setup (Android)",id:"google-play-setup-android",level:3},{value:"Common Issues",id:"common-issues",level:2},{value:"fetchProducts() returns empty list",id:"fetchproducts-returns-empty-list",level:3},{value:"1. Connection not established",id:"1-connection-not-established",level:4},{value:"2. Product IDs don&#39;t match",id:"2-product-ids-dont-match",level:4},{value:"3. Products not approved (iOS)",id:"3-products-not-approved-ios",level:4},{value:"4. App not uploaded to Play Console (Android)",id:"4-app-not-uploaded-to-play-console-android",level:4},{value:"Purchase flow issues",id:"purchase-flow-issues",level:3},{value:"1. Purchases not completing",id:"1-purchases-not-completing",level:4},{value:"2. Purchase events triggering automatically on app restart (iOS)",id:"2-purchase-events-triggering-automatically-on-app-restart-ios",level:4},{value:"3. Testing on simulators/emulators",id:"3-testing-on-simulatorsemulators",level:4},{value:"Connection issues",id:"connection-issues",level:3},{value:"1. Network connectivity",id:"1-network-connectivity",level:4},{value:"2. Store service unavailable",id:"2-store-service-unavailable",level:4},{value:"Platform-Specific Issues",id:"platform-specific-issues",level:2},{value:"iOS Issues",id:"ios-issues",level:3},{value:"Android Issues",id:"android-issues",level:3},{value:"Debugging Tips",id:"debugging-tips",level:2},{value:"1. Enable verbose logging",id:"1-enable-verbose-logging",level:3},{value:"2. Log purchase events",id:"2-log-purchase-events",level:3},{value:"3. Monitor connection state",id:"3-monitor-connection-state",level:3},{value:"Testing Strategies",id:"testing-strategies",level:2},{value:"1. Staged testing approach",id:"1-staged-testing-approach",level:3},{value:"2. Test different scenarios",id:"2-test-different-scenarios",level:3},{value:"3. Device testing matrix",id:"3-device-testing-matrix",level:3},{value:"Error Code Reference",id:"error-code-reference",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"Bug Report Template",id:"bug-report-template",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"troubleshooting",children:"Troubleshooting"})}),"\n",(0,r.jsx)(n.p,{children:"This guide covers common issues you might encounter when implementing in-app purchases with flutter_inapp_purchase and how to resolve them."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites-checklist",children:"Prerequisites Checklist"}),"\n",(0,r.jsx)(n.p,{children:"Before diving into troubleshooting, ensure you have completed these essential steps:"}),"\n",(0,r.jsx)(n.h3,{id:"app-store-setup-ios",children:"App Store Setup (iOS)"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Completed all agreements, tax, and banking information in App Store Connect"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",'Created sandbox testing accounts in "Users and Roles"']}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",'Signed into iOS device with sandbox account in "Settings > App Store"']}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",'Set up In-App Purchase products with status "Ready to Submit"']}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"google-play-setup-android",children:"Google Play Setup (Android)"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Completed all required information in Google Play Console"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Added test accounts to your app's testing track"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Using signed APK/AAB (not debug builds)"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Uploaded at least one version to internal testing"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsx)(n.h3,{id:"fetchproducts-returns-empty-list",children:"fetchProducts() returns empty list"}),"\n",(0,r.jsx)(n.p,{children:"This is one of the most common issues. Here are the potential causes and solutions:"}),"\n",(0,r.jsx)(n.h4,{id:"1-connection-not-established",children:"1. Connection not established"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class ProductLoader {\n  final _iap = FlutterInappPurchase.instance;\n  bool _connected = false;\n\n  Future<void> initialize() async {\n    _connected = await _iap.initConnection();\n\n    if (_connected) {\n      // \u2705 Only call fetchProducts when connected\n      await loadProducts();\n    } else {\n      debugPrint('Not connected to store yet');\n    }\n  }\n\n  Future<void> loadProducts() async {\n    final products = await _iap.fetchProducts(\n      skus: productIds,\n      type: ProductQueryType.inApp,\n    );\n    debugPrint('Loaded ${products.length} products');\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"2-product-ids-dont-match",children:"2. Product IDs don't match"}),"\n",(0,r.jsx)(n.p,{children:"Ensure your product IDs exactly match those configured in the stores:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"// \u274c Wrong: Using different IDs\nconst productIds = ['my_product_1', 'my_product_2'];\n\n// \u2705 Correct: Using exact IDs from store\nconst productIds = ['com.yourapp.product1', 'com.yourapp.premium'];\n"})}),"\n",(0,r.jsx)(n.h4,{id:"3-products-not-approved-ios",children:"3. Products not approved (iOS)"}),"\n",(0,r.jsx)(n.p,{children:"Products need time to propagate through Apple's systems:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Wait up to 24 hours after creating products"}),"\n",(0,r.jsx)(n.li,{children:'Ensure products are in "Ready to Submit" status'}),"\n",(0,r.jsx)(n.li,{children:"Test with sandbox accounts"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"4-app-not-uploaded-to-play-console-android",children:"4. App not uploaded to Play Console (Android)"}),"\n",(0,r.jsx)(n.p,{children:"For Android, your app must be uploaded to Play Console:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create signed build\nflutter build appbundle --release\n\n# Upload to Play Console internal testing track\n"})}),"\n",(0,r.jsx)(n.h3,{id:"purchase-flow-issues",children:"Purchase flow issues"}),"\n",(0,r.jsx)(n.h4,{id:"1-purchases-not-completing",children:"1. Purchases not completing"}),"\n",(0,r.jsx)(n.p,{children:"Always handle purchase updates and finish transactions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class PurchaseHandler {\n  final _iap = FlutterInappPurchase.instance;\n  StreamSubscription<Purchase>? _purchaseSubscription;\n\n  void setupListener() {\n    _purchaseSubscription = _iap.purchaseUpdatedListener.listen(\n      (purchase) async {\n        try {\n          // Validate receipt\n          final isValid = await validateOnServer(purchase);\n\n          if (isValid) {\n            // Grant purchase to user\n            await grantPurchase(purchase);\n\n            // \u2705 Always finish the transaction\n            await _iap.finishTransaction(\n              purchase: purchase,\n              isConsumable: false, // default is false\n            );\n          }\n        } catch (error) {\n          debugPrint('Purchase handling failed: $error');\n        }\n      },\n    );\n  }\n\n  @override\n  void dispose() {\n    _purchaseSubscription?.cancel();\n  }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Important - Transaction Acknowledgment Requirements:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"iOS"}),": Unfinished transactions remain in the queue indefinitely until ",(0,r.jsx)(n.code,{children:"finishTransaction"})," is called"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Android"}),": Purchases must be acknowledged within 3 days (72 hours) or they will be automatically refunded"]}),"\n",(0,r.jsxs)(n.li,{children:["For ",(0,r.jsx)(n.strong,{children:"consumable products"}),": Use ",(0,r.jsx)(n.code,{children:"finishTransaction(purchase: purchase, isConsumable: true)"})]}),"\n",(0,r.jsxs)(n.li,{children:["For ",(0,r.jsx)(n.strong,{children:"non-consumables/subscriptions"}),": Use ",(0,r.jsx)(n.code,{children:"finishTransaction(purchase: purchase, isConsumable: false)"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-purchase-events-triggering-automatically-on-app-restart-ios",children:"2. Purchase events triggering automatically on app restart (iOS)"}),"\n",(0,r.jsx)(n.p,{children:"This happens when transactions are not properly finished. iOS stores unfinished transactions and replays them on app startup."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem:"})," Your purchase listener fires automatically every time the app starts with a previous purchase."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cause:"})," You didn't call ",(0,r.jsx)(n.code,{children:"finishTransaction"}),' after processing the purchase, so iOS keeps the transaction in an "unfinished" state.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution:"})," Always call ",(0,r.jsx)(n.code,{children:"finishTransaction"})," after successfully processing a purchase:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"void setupListener() {\n  _iap.purchaseUpdatedListener.listen((purchase) async {\n    debugPrint('Purchase successful: ${purchase.productId}');\n\n    try {\n      // 1. Validate the receipt (Server-side validation required)\n      final isValid = await validateReceiptOnServer(purchase);\n      if (!isValid) {\n        debugPrint('Invalid receipt');\n        return;\n      }\n\n      // 2. Process the purchase\n      await processPurchase(purchase);\n\n      // 3. IMPORTANT: Finish the transaction to prevent replay\n      await _iap.finishTransaction(\n        purchase: purchase,\n        isConsumable: false, // For subscriptions/non-consumables\n      );\n    } catch (error) {\n      debugPrint('Purchase processing failed: $error');\n    }\n  });\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Prevention:"})," Handle pending transactions on app startup:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> checkPendingPurchases() async {\n  // Get all unfinished transactions\n  final purchases = await _iap.getAvailablePurchases();\n\n  for (final purchase in purchases) {\n    // If already processed, just finish the transaction\n    if (await isAlreadyProcessed(purchase)) {\n      await _iap.finishTransaction(purchase: purchase);\n    } else {\n      // Process the purchase first, then finish\n      await processPurchase(purchase);\n      await _iap.finishTransaction(purchase: purchase);\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"3-testing-on-simulatorsemulators",children:"3. Testing on simulators/emulators"}),"\n",(0,r.jsx)(n.p,{children:"In-app purchases only work on real devices:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'dart:io';\n\nFuture<bool> checkDeviceSupport() async {\n  // iOS simulator check\n  if (Platform.isIOS) {\n    // Simulators cannot make purchases\n    // Use physical device with sandbox account\n    return true; // Assume real device in production\n  }\n\n  // Android emulator check\n  if (Platform.isAndroid) {\n    // Google Play must be installed\n    return true; // Assume real device in production\n  }\n\n  return false;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"connection-issues",children:"Connection issues"}),"\n",(0,r.jsx)(n.h4,{id:"1-network-connectivity",children:"1. Network connectivity"}),"\n",(0,r.jsx)(n.p,{children:"Handle network errors gracefully:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class ConnectionHandler {\n  final _iap = FlutterInappPurchase.instance;\n  StreamSubscription<PurchaseError>? _errorSubscription;\n\n  void setupErrorListener() {\n    _errorSubscription = _iap.purchaseErrorListener.listen((error) {\n      if (error.code == ErrorCode.NetworkError) {\n        showRetryDialog();\n      }\n    });\n  }\n\n  void showRetryDialog() {\n    // Show user-friendly message\n    showDialog(\n      context: context,\n      builder: (context) => AlertDialog(\n        title: Text('Connection Error'),\n        content: Text('Please check your internet connection'),\n        actions: [\n          TextButton(\n            onPressed: () => retryConnection(),\n            child: Text('Retry'),\n          ),\n        ],\n      ),\n    );\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"2-store-service-unavailable",children:"2. Store service unavailable"}),"\n",(0,r.jsx)(n.p,{children:"Sometimes store services are temporarily unavailable:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"void handleStoreUnavailable() {\n  showDialog(\n    context: context,\n    builder: (context) => AlertDialog(\n      title: Text('Store Unavailable'),\n      content: Text('The store is temporarily unavailable. Please try again later.'),\n      actions: [\n        TextButton(\n          onPressed: () => Navigator.pop(context),\n          child: Text('OK'),\n        ),\n      ],\n    ),\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"platform-specific-issues",children:"Platform-Specific Issues"}),"\n",(0,r.jsx)(n.h3,{id:"ios-issues",children:"iOS Issues"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Invalid product ID error:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure you're signed in with sandbox account"}),"\n",(0,r.jsx)(n.li,{children:"Check product IDs match exactly"}),"\n",(0,r.jsx)(n.li,{children:"Verify app bundle ID matches"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"StoreKit configuration:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add StoreKit capability in Xcode"}),"\n",(0,r.jsx)(n.li,{children:"Ensure proper iOS deployment target (15.0+)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"android-issues",children:"Android Issues"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Billing client setup:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gradle",children:"// android/app/build.gradle\ndependencies {\n  implementation 'com.android.billingclient:billing:6.0.1'\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Missing permissions:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'\x3c!-- android/app/src/main/AndroidManifest.xml --\x3e\n<uses-permission android:name="com.android.vending.BILLING" />\n'})}),"\n",(0,r.jsx)(n.h2,{id:"debugging-tips",children:"Debugging Tips"}),"\n",(0,r.jsx)(n.h3,{id:"1-enable-verbose-logging",children:"1. Enable verbose logging"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"void setupDebugging() {\n  if (kDebugMode) {\n    // Use debugPrint throughout your implementation\n    debugPrint('IAP Debug mode enabled');\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-log-purchase-events",children:"2. Log purchase events"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"void setupPurchaseListener() {\n  _iap.purchaseUpdatedListener.listen((purchase) {\n    debugPrint('Purchase received: ${purchase.toJson()}');\n  });\n\n  _iap.purchaseErrorListener.listen((error) {\n    debugPrint('Purchase error: ${error.code?.name} - ${error.message}');\n  });\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-monitor-connection-state",children:"3. Monitor connection state"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> initializeAndLog() async {\n  try {\n    final connected = await _iap.initConnection();\n    debugPrint('Connection state: $connected');\n  } catch (error) {\n    debugPrint('Connection failed: $error');\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing-strategies",children:"Testing Strategies"}),"\n",(0,r.jsx)(n.h3,{id:"1-staged-testing-approach",children:"1. Staged testing approach"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unit tests"}),": Test your purchase logic without actual store calls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sandbox testing"}),": Use store sandbox/test accounts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Internal testing"}),": Test with real store in closed testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Production testing"}),": Final verification in live environment"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-test-different-scenarios",children:"2. Test different scenarios"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final testScenarios = [\n  'successful_purchase',\n  'user_cancelled',\n  'network_error',\n  'insufficient_funds',\n  'product_unavailable',\n  'pending_purchase',\n];\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-device-testing-matrix",children:"3. Device testing matrix"}),"\n",(0,r.jsx)(n.p,{children:"Test on various devices and OS versions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"iOS"}),": Different iPhone/iPad models, iOS versions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Android"}),": Different manufacturers, Android versions, Play Services versions"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"error-code-reference",children:"Error Code Reference"}),"\n",(0,r.jsx)(n.p,{children:"Common error codes and their meanings:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Code"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Action"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ErrorCode.UserCancelled"})}),(0,r.jsx)(n.td,{children:"User cancelled purchase"}),(0,r.jsx)(n.td,{children:"No action needed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ErrorCode.NetworkError"})}),(0,r.jsx)(n.td,{children:"Network connectivity issue"}),(0,r.jsx)(n.td,{children:"Show retry option"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ErrorCode.ItemUnavailable"})}),(0,r.jsx)(n.td,{children:"Product not available"}),(0,r.jsx)(n.td,{children:"Check product setup"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ErrorCode.AlreadyOwned"})}),(0,r.jsx)(n.td,{children:"User already owns product"}),(0,r.jsx)(n.td,{children:"Check ownership status"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ErrorCode.Unknown"})}),(0,r.jsx)(n.td,{children:"Unknown error"}),(0,r.jsx)(n.td,{children:"Log for investigation"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"../api/error-codes",children:"Error Codes"})," for complete reference."]}),"\n",(0,r.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsx)(n.p,{children:"If you're still experiencing issues:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Check logs"}),": Review device logs and crash reports"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Search issues"}),": Check the ",(0,r.jsx)(n.a,{href:"https://github.com/dooboolab-community/flutter_inapp_purchase/issues",children:"GitHub issues"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minimal reproduction"}),": Create a minimal example that reproduces the issue"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Report bug"}),": File a detailed issue with reproduction steps"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"bug-report-template",children:"Bug Report Template"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"**Environment:**\n- flutter_inapp_purchase version: x.x.x\n- Platform: iOS/Android\n- OS version: x.x.x\n- Device: Device model\n- Flutter version: x.x.x\n\n**Description:**\nClear description of the issue\n\n**Steps to reproduce:**\n1. Step 1\n2. Step 2\n3. Step 3\n\n**Expected behavior:**\nWhat should happen\n\n**Actual behavior:**\nWhat actually happens\n\n**Logs:**\nRelevant logs and error messages\n"})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./error-handling",children:"Error Handling"})," - Handle errors gracefully"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./faq",children:"FAQ"})," - Frequently asked questions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./support",children:"Support"})," - Get additional help"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);