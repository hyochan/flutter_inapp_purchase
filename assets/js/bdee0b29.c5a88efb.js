"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[8550],{7113:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"api/types/purchase-state","title":"Purchase States","description":"Types and enums representing the state of purchases and transactions.","source":"@site/versioned_docs/version-7.0/api/types/purchase-state.md","sourceDirName":"api/types","slug":"/api/types/purchase-state","permalink":"/flutter_inapp_purchase/docs/7.0/api/types/purchase-state","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/versioned_docs/version-7.0/api/types/purchase-state.md","tags":[],"version":"7.0","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Purchase States"}}');var r=a(4848),t=a(8453);const c={sidebar_position:2,title:"Purchase States"},i="Purchase States",d={},h=[{value:"PurchaseState",id:"purchasestate",level:2},{value:"Usage",id:"usage",level:3},{value:"Purchase Classes",id:"purchase-classes",level:2},{value:"PurchaseIOS",id:"purchaseios",level:3},{value:"PurchaseAndroid",id:"purchaseandroid",level:3},{value:"Handling Purchase States",id:"handling-purchase-states",level:2},{value:"Basic Purchase Handling",id:"basic-purchase-handling",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Related",id:"related",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"purchase-states",children:"Purchase States"})}),"\n",(0,r.jsx)(s.p,{children:"Types and enums representing the state of purchases and transactions."}),"\n",(0,r.jsx)(s.h2,{id:"purchasestate",children:"PurchaseState"}),"\n",(0,r.jsx)(s.p,{children:"Enum representing the state of a purchase."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"enum PurchaseState {\n  Pending,      // Purchase is pending (awaiting payment)\n  Purchased,    // Purchase completed successfully\n  Failed,       // Purchase failed\n  Restored,     // Purchase was restored\n  Deferred,     // Purchase deferred (e.g., Ask to Buy on iOS)\n  Unknown,      // Unknown/unspecified state\n}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"void _handlePurchase(Purchase purchase) {\n  // PurchaseState is available in both PurchaseIOS and PurchaseAndroid\n  final state = purchase is PurchaseIOS\n    ? purchase.transactionState\n    : (purchase as PurchaseAndroid).purchaseState;\n\n  switch (state) {\n    case PurchaseState.Purchased:\n      // Purchase completed - safe to deliver content\n      _deliverContent(purchase.productId);\n      break;\n\n    case PurchaseState.Pending:\n      // Payment pending - wait for completion\n      _showPendingMessage();\n      break;\n\n    case PurchaseState.Failed:\n      // Purchase failed\n      _showErrorMessage();\n      break;\n\n    case PurchaseState.Restored:\n      // Purchase was restored\n      _deliverContent(purchase.productId);\n      break;\n\n    case PurchaseState.Deferred:\n      // Waiting for parental approval (iOS Ask to Buy)\n      _showDeferredMessage();\n      break;\n\n    case PurchaseState.Unknown:\n      // Unknown state - handle cautiously\n      debugPrint('Unknown purchase state');\n      break;\n  }\n}\n"})}),"\n",(0,r.jsx)(s.h2,{id:"purchase-classes",children:"Purchase Classes"}),"\n",(0,r.jsx)(s.p,{children:"flutter_inapp_purchase uses union types for purchases. When you receive purchases, you get platform-specific purchase types."}),"\n",(0,r.jsx)(s.h3,{id:"purchaseios",children:"PurchaseIOS"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"class PurchaseIOS extends Purchase {\n  final String id;\n  final String originalId;\n  final String productId;\n  final DateTime purchaseDate;\n  final PurchaseState transactionState;\n  final String? receiptData;\n  // ... additional iOS-specific properties\n}\n"})}),"\n",(0,r.jsx)(s.h3,{id:"purchaseandroid",children:"PurchaseAndroid"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"class PurchaseAndroid extends Purchase {\n  final String? orderId;\n  final String productId;\n  final PurchaseState purchaseState;\n  final int purchaseTime;\n  final String purchaseToken;\n  final bool acknowledged;\n  // ... additional Android-specific properties\n}\n"})}),"\n",(0,r.jsx)(s.h2,{id:"handling-purchase-states",children:"Handling Purchase States"}),"\n",(0,r.jsx)(s.h3,{id:"basic-purchase-handling",children:"Basic Purchase Handling"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"void _handlePurchase(Purchase purchase) async {\n  if (purchase is PurchaseIOS) {\n    switch (purchase.transactionState) {\n      case PurchaseState.Purchased:\n      case PurchaseState.Restored:\n        await _deliverContent(purchase.productId);\n        await iap.finishTransaction(\n          purchase: purchase,\n          isConsumable: false,\n        );\n        break;\n\n      case PurchaseState.Deferred:\n        _showMessage('Waiting for approval...');\n        break;\n\n      case PurchaseState.Failed:\n        _showMessage('Purchase failed');\n        break;\n\n      default:\n        break;\n    }\n  } else if (purchase is PurchaseAndroid) {\n    switch (purchase.purchaseState) {\n      case PurchaseState.Purchased:\n        if (!purchase.acknowledged) {\n          await _deliverContent(purchase.productId);\n          await iap.finishTransaction(\n            purchase: purchase,\n            isConsumable: false,\n          );\n        }\n        break;\n\n      case PurchaseState.Pending:\n        _showMessage('Purchase pending...');\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(s.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Handle all states"})," - Don't assume purchases will always be in ",(0,r.jsx)(s.code,{children:"Purchased"})," state"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Check acknowledgment"})," - On Android, check if purchase needs acknowledgment"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Finish transactions"})," - Always finish transactions after delivering content"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Handle pending"})," - Support pending purchases for async payment methods"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Persist state"})," - Save purchase state locally for recovery"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"related",children:"Related"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"./error-codes",children:"Error Codes"})," - Error states and codes"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"./product-type",children:"Product Types"})," - Product-related types"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"../../guides/lifecycle",children:"Purchase Lifecycle"})," - Complete purchase flow"]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,s,a)=>{a.d(s,{R:()=>c,x:()=>i});var n=a(6540);const r={},t=n.createContext(r);function c(e){const s=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);