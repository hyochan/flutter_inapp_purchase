"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[5978],{2150:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"7.0","label":"7.0","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-7.0","isLast":false,"docsSidebars":{},"docs":{"api/classes/flutter-inapp-purchase":{"id":"api/classes/flutter-inapp-purchase","title":"FlutterInappPurchase","description":"The main class for handling in-app purchases in Flutter applications. This class provides a comprehensive API for managing purchases on both iOS and Android platforms."},"api/classes/product":{"id":"api/classes/product","title":"Product","description":"Represents a product available for purchase from either the Google Play Store or iOS App Store."},"api/classes/purchase-item":{"id":"api/classes/purchase-item","title":"Purchase","description":"Represents an item that was purchased from either the Google Play Store or iOS App Store."},"api/core-methods":{"id":"api/core-methods","title":"Core Methods","description":"Essential methods for implementing in-app purchases with flutterinapppurchase v7.0. All methods follow the OpenIAP specification and support both iOS and Android platforms."},"api/error-codes":{"id":"api/error-codes","title":"Error Handling","description":"Comprehensive error handling guide for flutterinapppurchase v7.0. Learn how to handle purchase errors effectively."},"api/flutter-inapp-purchase":{"id":"api/flutter-inapp-purchase","title":"FlutterInappPurchase","description":"The main class for handling in-app purchases across iOS and Android platforms."},"api/index":{"id":"api/index","title":"API Reference","description":"Complete reference for flutterinapppurchase v6.8.0 - A unified API for implementing in-app purchases across iOS and Android platforms."},"api/listeners":{"id":"api/listeners","title":"Listeners","description":"Real-time event streams for monitoring purchase transactions and errors in flutterinapppurchase v7.0."},"api/methods/finish-transaction":{"id":"api/methods/finish-transaction","title":"finishTransaction","description":"Completes a transaction and removes it from the queue."},"api/methods/get-available-purchases":{"id":"api/methods/get-available-purchases","title":"getAvailablePurchases","description":"Retrieves non-consumed purchases with optional filters for platform-specific behavior."},"api/methods/get-products":{"id":"api/methods/get-products","title":"fetchProducts","description":"fetchProducts() is the unified way to load in-app products or subscriptions from the store, consolidating the legacy helpers into a single API."},"api/methods/init-connection":{"id":"api/methods/init-connection","title":"initConnection","description":"Initializes the connection to the platform\'s billing service."},"api/methods/request-purchase":{"id":"api/methods/request-purchase","title":"requestPurchase","description":"Initiates a purchase flow for the specified product."},"api/methods/request-subscription":{"id":"api/methods/request-subscription","title":"requestSubscription","description":"\u26a0\ufe0f Deprecated: requestSubscription() remains for backwards compatibility with the v5 API. New code should call requestPurchase() with either PurchaseType.subs (legacy API) or the unified RequestPurchaseProps flow."},"api/methods/validate-receipt":{"id":"api/methods/validate-receipt","title":"validateReceipt","description":"Validates purchase receipts with platform verification services."},"api/overview":{"id":"api/overview","title":"API Overview","description":"Flutter In-App Purchase provides a comprehensive API for managing in-app purchases across iOS and Android platforms."},"api/types":{"id":"api/types","title":"Types","description":"Comprehensive type definitions for flutterinapppurchase v7.0. All types follow the OpenIAP specification and are auto-generated from the schema."},"api/types/error-codes":{"id":"api/types/error-codes","title":"Error Codes","description":"Comprehensive error handling types and codes for flutterinapppurchase."},"api/types/product-type":{"id":"api/types/product-type","title":"Product Types","description":"Types and enums related to products and purchases in flutterinapppurchase."},"api/types/purchase-state":{"id":"api/types/purchase-state","title":"Purchase States","description":"Types and enums representing the state of purchases and transactions."},"examples/alternative-billing":{"id":"examples/alternative-billing","title":"Alternative Billing Example","description":"Use alternative billing to redirect users to external payment systems or offer payment choices alongside platform billing."},"examples/available-purchases":{"id":"examples/available-purchases","title":"Available Purchases","description":"Source Code: availablepurchasesscreen.dart"},"examples/offer-code":{"id":"examples/offer-code","title":"Offer Code Redemption","description":"Source Code: offercodescreen.dart"},"examples/purchase-flow":{"id":"examples/purchase-flow","title":"Purchase Flow","description":"Source Code: purchaseflowscreen.dart"},"examples/subscription-flow":{"id":"examples/subscription-flow","title":"Subscription Flow","description":"Source Code: subscriptionflowscreen.dart"},"faq":{"id":"faq","title":"FAQ","description":"Common questions and answers about flutterinapppurchase."},"getting-started/android-setup":{"id":"getting-started/android-setup","title":"Android Setup","description":"For complete Android setup instructions including Google Play Console configuration, app setup, and testing guidelines, please visit:"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation & Setup","description":"Learn how to install and configure flutterinapppurchase in your Flutter project."},"getting-started/ios-setup":{"id":"getting-started/ios-setup","title":"iOS Setup","description":"For complete iOS setup instructions including App Store Connect configuration, Xcode setup, and testing guidelines, please visit:"},"getting-started/quickstart":{"id":"getting-started/quickstart","title":"Quick Start","description":"Get up and running with Flutter In-App Purchase in minutes."},"guides/alternative-billing":{"id":"guides/alternative-billing","title":"Alternative Billing","description":"This guide explains how to implement alternative billing functionality in your app using flutterinapppurchase, allowing you to use external payment systems alongside or instead of the App Store/Google Play billing."},"guides/error-handling":{"id":"guides/error-handling","title":"Error Handling","description":"This guide covers best practices for handling errors in your flutterinapppurchase implementation."},"guides/faq":{"id":"guides/faq","title":"FAQ","description":"Common questions and answers about flutterinapppurchase v7.0, covering implementation, platform differences, best practices, and troubleshooting."},"guides/lifecycle":{"id":"guides/lifecycle","title":"Purchase Lifecycle","description":"Understanding the complete purchase lifecycle is essential for proper implementation."},"guides/offer-code-redemption":{"id":"guides/offer-code-redemption","title":"Offer Code Redemption","description":"This guide explains how to implement offer code redemption functionality in your app using flutterinapppurchase."},"guides/purchases":{"id":"guides/purchases","title":"Purchases","description":"Complete guide to implementing in-app purchases with flutterinapppurchase v7.0."},"guides/subscription-offers":{"id":"guides/subscription-offers","title":"Subscription Offers","description":"Handle subscription purchases, upgrades, downgrades, and promotional offers."},"guides/subscription-validation":{"id":"guides/subscription-validation","title":"Subscription Validation","description":"flutterinapppurchase exposes modern StoreKit 2 (iOS) and Google Play Billing (Android) pipelines. This guide walks through the data available on the Dart side, how it maps to the underlying native APIs, and practical strategies to answer common lifecycle questions such as \\"is the user currently inside their free trial?\\""},"guides/support":{"id":"guides/support","title":"Support","description":"Need help with flutterinapppurchase? We\'re here to assist you."},"guides/troubleshooting":{"id":"guides/troubleshooting","title":"Troubleshooting","description":"This guide covers common issues you might encounter when implementing in-app purchases with flutterinapppurchase and how to resolve them."},"intro":{"id":"intro","title":"flutter_inapp_purchase","description":"A comprehensive Flutter plugin for implementing in-app purchases that conforms to the Open IAP specification."},"migration/from-expo-iap":{"id":"migration/from-expo-iap","title":"Migration from expo-iap","description":"This guide helps you migrate from expo-iap to flutterinapppurchase, highlighting key differences and providing migration strategies."},"migration/from-v5":{"id":"migration/from-v5","title":"Migration from v5.x","description":"This guide helps you migrate from flutterinapppurchase v5.x to the latest v7.0+ version."},"migration/from-v6":{"id":"migration/from-v6","title":"Migrating from v6 to v7","description":"Version 7.0.0 introduces breaking API changes to align with OpenIAP standards and improve developer experience with named parameters."},"sponsors":{"id":"sponsors","title":"Sponsors","description":"Support flutter_inapp_purchase development through sponsorship"},"troubleshooting":{"id":"troubleshooting","title":"Troubleshooting","description":"Common issues and solutions when implementing in-app purchases with flutterinapppurchase."}}}}')}}]);