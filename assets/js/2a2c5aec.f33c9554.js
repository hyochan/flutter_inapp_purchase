"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[8791],{7780:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var r=i(8715),s=i(4848),t=i(8453);const a={slug:"6.4.0-release",title:"Release 6.4.0 - Simplified APIs",authors:["hyochan"],tags:["release","flutter","in-app-purchase"],date:new Date("2025-08-21T00:00:00.000Z")},l="Version 6.4.0 Release",o={authorsImageUrls:[void 0]},d=[{value:"Version Information",id:"version-information",level:2},{value:"Breaking Changes",id:"breaking-changes",level:2},{value:"Simplified fetchProducts API",id:"simplified-fetchproducts-api",level:3},{value:"Deprecated Android aliases retained (still deprecated)",id:"deprecated-android-aliases-retained-still-deprecated",level:3},{value:"Android Replacement Mode &amp; OpenIAP compliance (from 6.3.x)",id:"android-replacement-mode--openiap-compliance-from-63x",level:3},{value:"iOS subscription lifecycle improvements",id:"ios-subscription-lifecycle-improvements",level:3},{value:"Android Replacement Mode &amp; OpenIAP compliance (from 6.3.x)",id:"android-replacement-mode--openiap-compliance-from-63x-1",level:3},{value:"iOS subscription lifecycle improvements",id:"ios-subscription-lifecycle-improvements-1",level:3},{value:"A Note on Recent Changes",id:"a-note-on-recent-changes",level:2},{value:"Migration Guide",id:"migration-guide",level:2},{value:"Looking Forward",id:"looking-forward",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["We're releasing version 6.4.0 with the streamlined ",(0,s.jsx)(n.code,{children:"fetchProducts"})," API plus\nall of the platform work that landed during the 6.3.x cycle. If you skipped the\nintermediate patch releases, this post captures everything you need to know."]}),"\n",(0,s.jsx)(n.h2,{id:"version-information",children:"Version Information"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Current Version"}),": 6.4.0"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Previous Stable"}),": 6.3.3"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"breaking-changes",children:"Breaking Changes"}),"\n",(0,s.jsx)(n.h3,{id:"simplified-fetchproducts-api",children:"Simplified fetchProducts API"}),"\n",(0,s.jsxs)(n.p,{children:["Based on feedback from issue ",(0,s.jsx)(n.a,{href:"https://github.com/hyochan/flutter_inapp_purchase/issues/527",children:"#527"}),", we've simplified the ",(0,s.jsx)(n.code,{children:"fetchProducts"})," method to use direct parameters instead of a wrapper object:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Before (6.3.x):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"final products = await iap.fetchProducts(\n  RequestProductsParams(\n    productIds: ['product_id'],\n    type: PurchaseType.inapp,\n  ),\n);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"After (6.4.0):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"final products = await iap.fetchProducts(\n  productIds: ['product_id'],\n  type: PurchaseType.inapp,  // Optional, defaults to PurchaseType.inapp\n);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"RequestProductsParams"})," class has been removed entirely, making the API cleaner and more intuitive."]}),"\n",(0,s.jsx)(n.h3,{id:"deprecated-android-aliases-retained-still-deprecated",children:"Deprecated Android aliases retained (still deprecated)"}),"\n",(0,s.jsxs)(n.p,{children:["In v6.4.0 we kept the previously deprecated Android aliases in place, but they\nremain ",(0,s.jsx)(n.strong,{children:"deprecated"})," and will be removed in a future major release:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"subscriptionOfferDetails"})," field \u2192 use ",(0,s.jsx)(n.code,{children:"subscriptionOfferDetailsAndroid"}),"\ninstead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"prorationMode"})," field \u2192 use ",(0,s.jsx)(n.code,{children:"replacementModeAndroid"})," instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"AndroidProrationMode"})," typedef \u2192 use ",(0,s.jsx)(n.code,{children:"AndroidReplacementMode"})," instead."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Update any lingering usage so you are ready once the aliases are finally\nremoved."}),"\n",(0,s.jsx)(n.h3,{id:"android-replacement-mode--openiap-compliance-from-63x",children:"Android Replacement Mode & OpenIAP compliance (from 6.3.x)"}),"\n",(0,s.jsx)(n.p,{children:"The 6.3.x line introduced the Play Billing v8 terminology and a big schema\nrefresh for OpenIAP. Those updates remain in 6.4.x:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"replacementMode"})," supersedes the old ",(0,s.jsx)(n.code,{children:"prorationMode"})," values on Android."]}),"\n",(0,s.jsxs)(n.li,{children:["The Dart enums follow the Play Store names (",(0,s.jsx)(n.code,{children:"withTimeProration"}),",\n",(0,s.jsx)(n.code,{children:"chargeProratedPrice"}),", etc.)."]}),"\n",(0,s.jsxs)(n.li,{children:["Core types now inherit from ",(0,s.jsx)(n.code,{children:"ProductCommon"}),", ",(0,s.jsx)(n.code,{children:"PurchaseCommon"}),", and\n",(0,s.jsx)(n.code,{children:"ProductSubscriptionCommon"}),", matching the OpenIAP spec."]}),"\n",(0,s.jsxs)(n.li,{children:["Android products expose the missing Play Store fields (",(0,s.jsx)(n.code,{children:"nameAndroid"}),",\n",(0,s.jsx)(n.code,{children:"oneTimePurchaseOfferDetailsAndroid"}),") so you get the full pricing payload."]}),"\n",(0,s.jsx)(n.li,{children:"Extensive null\u2011safety and naming clean-up across the generated types."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"If you still reference the deprecated symbols, update them soon\u20146.4.x keeps\nthem as aliases, but they are scheduled for removal in a later release."}),"\n",(0,s.jsx)(n.h3,{id:"ios-subscription-lifecycle-improvements",children:"iOS subscription lifecycle improvements"}),"\n",(0,s.jsxs)(n.p,{children:["We fixed the StoreKit 2 sandbox behaviour that hid expired subscriptions. You\ncan now request historical transactions directly via ",(0,s.jsx)(n.code,{children:"getAvailablePurchases"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"final purchases = await FlutterInappPurchase.instance.getAvailablePurchases(\n  PurchaseOptions(onlyIncludeActiveItemsIOS: false),\n);\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"PurchaseOptions"})," is new in 6.4.x and lets you opt in to expired items or event\nrebroadcasts. With this, ",(0,s.jsx)(n.code,{children:"getPurchaseHistories()"})," is officially deprecated\u2014plan\nto migrate before 6.6.0, where it will disappear."]}),"\n",(0,s.jsx)(n.h3,{id:"android-replacement-mode--openiap-compliance-from-63x-1",children:"Android Replacement Mode & OpenIAP compliance (from 6.3.x)"}),"\n",(0,s.jsx)(n.p,{children:"The 6.3.x line introduced the Play Billing v8 terminology and a big schema\nrefresh for OpenIAP. Those updates remain in 6.4.x:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"replacementMode"})," supersedes the old ",(0,s.jsx)(n.code,{children:"prorationMode"})," values on Android."]}),"\n",(0,s.jsxs)(n.li,{children:["The Dart enums follow the Play Store names (",(0,s.jsx)(n.code,{children:"withTimeProration"}),",\n",(0,s.jsx)(n.code,{children:"chargeProratedPrice"}),", etc.)."]}),"\n",(0,s.jsxs)(n.li,{children:["Core types now inherit from ",(0,s.jsx)(n.code,{children:"ProductCommon"}),", ",(0,s.jsx)(n.code,{children:"PurchaseCommon"}),", and\n",(0,s.jsx)(n.code,{children:"ProductSubscriptionCommon"}),", matching the OpenIAP spec."]}),"\n",(0,s.jsxs)(n.li,{children:["Android products expose the missing Play Store fields (",(0,s.jsx)(n.code,{children:"nameAndroid"}),",\n",(0,s.jsx)(n.code,{children:"oneTimePurchaseOfferDetailsAndroid"}),") so you get the full pricing payload."]}),"\n",(0,s.jsx)(n.li,{children:"Extensive null\u2011safety and naming clean-up across the generated types."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"If you still reference the deprecated symbols, update them now\u20146.4.0 is the\nfirst release where they are removed."}),"\n",(0,s.jsx)(n.h3,{id:"ios-subscription-lifecycle-improvements-1",children:"iOS subscription lifecycle improvements"}),"\n",(0,s.jsxs)(n.p,{children:["We fixed the StoreKit 2 sandbox behaviour that hid expired subscriptions. You\ncan now request historical transactions directly via ",(0,s.jsx)(n.code,{children:"getAvailablePurchases"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"final purchases = await FlutterInappPurchase.instance.getAvailablePurchases(\n  PurchaseOptions(onlyIncludeActiveItemsIOS: false),\n);\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"PurchaseOptions"})," is new in 6.4.x and lets you opt in to expired items or event\nrebroadcasts. With this, ",(0,s.jsx)(n.code,{children:"getPurchaseHistories()"})," is officially deprecated\u2014plan\nto migrate before 6.6.0, where it will disappear."]}),"\n",(0,s.jsx)(n.h2,{id:"a-note-on-recent-changes",children:"A Note on Recent Changes"}),"\n",(0,s.jsx)(n.p,{children:"We understand there have been several breaking changes in recent releases, and we sincerely apologize for any inconvenience this may have caused. These changes are part of our concerted effort to rapidly address the long maintenance gap this library experienced and bring it up to modern standards."}),"\n",(0,s.jsx)(n.p,{children:"We're pleased to announce that with version 6.4.0, we believe the major restructuring phase is now complete. The API should remain stable moving forward, allowing you to build with confidence."}),"\n",(0,s.jsx)(n.h2,{id:"migration-guide",children:"Migration Guide"}),"\n",(0,s.jsx)(n.p,{children:"To migrate from 6.3.x to 6.4.0:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Remove any imports of ",(0,s.jsx)(n.code,{children:"RequestProductsParams"})]}),"\n",(0,s.jsxs)(n.li,{children:["Update all calls to ",(0,s.jsx)(n.code,{children:"fetchProducts"})," to use the new parameter format:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Replace ",(0,s.jsx)(n.code,{children:"RequestProductsParams(productIds: ids, type: type)"})," with direct named parameters"]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"type"})," parameter now defaults to ",(0,s.jsx)(n.code,{children:"PurchaseType.inapp"})," if not specified"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"looking-forward",children:"Looking Forward"}),"\n",(0,s.jsx)(n.p,{children:"With this release, we've addressed the accumulated technical debt and modernized the API structure. Future releases will focus on:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Adding new features"}),"\n",(0,s.jsx)(n.li,{children:"Performance improvements"}),"\n",(0,s.jsx)(n.li,{children:"Bug fixes"}),"\n",(0,s.jsx)(n.li,{children:"Documentation enhancements"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"All while maintaining API stability."}),"\n",(0,s.jsx)(n.p,{children:"Thank you for your patience and continued support as we've worked to improve flutter_inapp_purchase."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var r=i(6540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}},8715:e=>{e.exports=JSON.parse('{"permalink":"/flutter_inapp_purchase/blog/6.4.0-release","editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/blog/2025-08-21-6.4.0.release.md","source":"@site/blog/2025-08-21-6.4.0.release.md","title":"Release 6.4.0 - Simplified APIs","description":"We\'re releasing version 6.4.0 with the streamlined fetchProducts API plus","date":"2025-08-21T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/flutter_inapp_purchase/blog/tags/release","description":"New version releases and updates"},{"inline":false,"label":"Flutter","permalink":"/flutter_inapp_purchase/blog/tags/flutter","description":"Flutter framework related topics"},{"inline":false,"label":"In-App Purchase","permalink":"/flutter_inapp_purchase/blog/tags/in-app-purchase","description":"In-app purchase implementation and best practices"}],"readingTime":3.56,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"Maintainer of flutter_inapp_purchase & expo-iap","url":"https://github.com/hyochan","page":{"permalink":"/flutter_inapp_purchase/blog/authors/hyochan"},"socials":{"x":"https://x.com/hyodotdev","github":"https://github.com/hyochan"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"6.4.0-release","title":"Release 6.4.0 - Simplified APIs","authors":["hyochan"],"tags":["release","flutter","in-app-purchase"],"date":"2025-08-21T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"Release 6.5.0","permalink":"/flutter_inapp_purchase/blog/6.5.0-release"},"nextItem":{"title":"Release 6.3.0","permalink":"/flutter_inapp_purchase/blog/6.3-release"}}')}}]);