"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[2950],{4185:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>c});var r=i(6548),l=i(4848),s=i(8453);const t={slug:"7.0.0-release",title:"Release 7.0.0 - OpenIAP GQL 1.0.10, Type Safety & Alternative Billing",authors:["hyochan"],tags:["release","openiap","flutter","in-app-purchase","breaking-change","alternative-billing"],date:new Date("2025-10-04T00:00:00.000Z")},a=void 0,d={authorsImageUrls:[void 0]},c=[{value:"Highlights",id:"highlights",level:2},{value:"Migration to OpenIAP GQL 1.0.10",id:"migration-to-openiap-gql-1010",level:3},{value:"Platform-Specific Product Types",id:"platform-specific-product-types",level:3},{value:"Non-Nullable Event Streams",id:"non-nullable-event-streams",level:3},{value:"Alternative Billing Support",id:"alternative-billing-support",level:3},{value:"iOS Alternative Billing (StoreKit External Purchase)",id:"ios-alternative-billing-storekit-external-purchase",level:4},{value:"Android Alternative Billing",id:"android-alternative-billing",level:4},{value:"User Choice Billing Event Listener",id:"user-choice-billing-event-listener",level:4},{value:"Android Replacement Modes",id:"android-replacement-modes",level:3},{value:"Breaking Changes",id:"breaking-changes",level:2},{value:"Removed Methods",id:"removed-methods",level:3},{value:"API Changes",id:"api-changes",level:3},{value:"Migration Guide",id:"migration-guide",level:2},{value:"1. Update Event Listeners",id:"1-update-event-listeners",level:3},{value:"2. Handle Union Types",id:"2-handle-union-types",level:3},{value:"3. Update Replacement Modes",id:"3-update-replacement-modes",level:3},{value:"4. Replace Removed Methods",id:"4-replace-removed-methods",level:3},{value:"Benefits",id:"benefits",level:2},{value:"Type Safety",id:"type-safety",level:3},{value:"OpenIAP Compliance",id:"openiap-compliance",level:3},{value:"Better Developer Experience",id:"better-developer-experience",level:3},{value:"Alternative Billing Flexibility",id:"alternative-billing-flexibility",level:3},{value:"Platform Requirements",id:"platform-requirements",level:2},{value:"iOS Alternative Billing",id:"ios-alternative-billing",level:3},{value:"Android Alternative Billing",id:"android-alternative-billing-1",level:3},{value:"Resources",id:"resources",level:2},{value:"Acknowledgments",id:"acknowledgments",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"Release 7.0.0 migrates to OpenIAP GQL 1.0.10, introducing union types, platform-specific classes, enhanced type safety, and comprehensive alternative billing support for both iOS and Android platforms."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/hyochan/flutter_inapp_purchase/releases/tag/7.0.0",children:"View the release on GitHub \u2192"})}),"\n",(0,l.jsx)(n.h2,{id:"highlights",children:"Highlights"}),"\n",(0,l.jsx)(n.h3,{id:"migration-to-openiap-gql-1010",children:"Migration to OpenIAP GQL 1.0.10"}),"\n",(0,l.jsx)(n.p,{children:"The biggest change in 7.0 is the migration to OpenIAP GQL 1.0.10, bringing a new type system that better represents platform-specific IAP features:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// Union types for Products\nfinal result = await iap.fetchProducts(\n  skus: ['product_id'],\n  type: ProductQueryType.InApp,\n);\n\nif (result is FetchProductsResultProducts) {\n  for (final product in result.value ?? []) {\n    if (product is ProductIOS) {\n      debugPrint('iOS Product: ${product.displayName}');\n    } else if (product is ProductAndroid) {\n      debugPrint('Android Product: ${product.title}');\n    }\n  }\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"This provides:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Better type safety"}),": Platform-specific properties are type-safe"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Clearer intent"}),": Code explicitly handles platform differences"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"IDE support"}),": Better autocomplete and type hints"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Runtime safety"}),": Union types prevent accessing wrong platform properties"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"platform-specific-product-types",children:"Platform-Specific Product Types"}),"\n",(0,l.jsx)(n.p,{children:"Products now use a union type system:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// In-app products\nProductIOS | ProductAndroid\n\n// Subscription products\nProductSubscriptionIOS | ProductSubscriptionAndroid\n\n// Purchases\nPurchaseIOS | PurchaseAndroid\n"})}),"\n",(0,l.jsx)(n.p,{children:"Each platform has its own specific properties:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"if (product is ProductSubscriptionIOS) {\n  // iOS-specific properties\n  final offers = product.subscriptionOffers;\n  final groupId = product.subscriptionGroupIdIOS;\n} else if (product is ProductSubscriptionAndroid) {\n  // Android-specific properties\n  final offers = product.subscriptionOffers;\n  final basePlanId = product.basePlanIdAndroid;\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"non-nullable-event-streams",children:"Non-Nullable Event Streams"}),"\n",(0,l.jsx)(n.p,{children:"Event streams are now non-nullable for better null safety:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// Before (v6.x)\nStream<Purchase?> get purchaseUpdated\nStream<PurchaseResult?> get purchaseError\n\n// After (v7.0)\nStream<Purchase> get purchaseUpdatedListener\nStream<PurchaseError> get purchaseErrorListener\n"})}),"\n",(0,l.jsx)(n.p,{children:"Benefits:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"No null checks"}),": Guaranteed to receive valid events"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Clearer naming"}),": ",(0,l.jsx)(n.code,{children:"Listener"})," suffix indicates event stream"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type safety"}),": Removes unnecessary optional handling"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"alternative-billing-support",children:"Alternative Billing Support"}),"\n",(0,l.jsx)(n.p,{children:"Added comprehensive support for alternative billing on both platforms:"}),"\n",(0,l.jsx)(n.h4,{id:"ios-alternative-billing-storekit-external-purchase",children:"iOS Alternative Billing (StoreKit External Purchase)"}),"\n",(0,l.jsx)(n.p,{children:"Three new APIs for managing external purchases on iOS:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"canPresentExternalPurchaseNoticeIOS()"})})," - Check if the notice sheet is available (iOS 18.2+)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"presentExternalPurchaseNoticeSheetIOS()"})})," - Present a notice before redirecting to external purchase (iOS 18.2+)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"presentExternalPurchaseLinkIOS(url)"})})," - Open external purchase link in Safari (iOS 16.0+)"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Configure your iOS app by adding entitlements and Info.plist keys:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"\x3c!-- ios/Runner/Runner.entitlements --\x3e\n<key>com.apple.developer.storekit.external-purchase</key>\n<true/>\n<key>com.apple.developer.storekit.external-purchase-link</key>\n<true/>\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"\x3c!-- ios/Runner/Info.plist --\x3e\n<key>SKExternalPurchase</key>\n<array>\n    <string>kr</string>\n    <string>nl</string>\n    <string>de</string>\n</array>\n\n<key>SKExternalPurchaseLink</key>\n<dict>\n    <key>kr</key>\n    <string>https://your-site.com/kr/checkout</string>\n</dict>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"android-alternative-billing",children:"Android Alternative Billing"}),"\n",(0,l.jsx)(n.p,{children:"Three new APIs for Google Play Alternative Billing flow:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"checkAlternativeBillingAvailabilityAndroid()"})})," - Check if alternative billing is available"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"showAlternativeBillingDialogAndroid()"})})," - Show Google's required information dialog"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"createAlternativeBillingTokenAndroid()"})})," - Generate reporting token after payment"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Initialize with alternative billing mode:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"await iap.initConnection(\n  alternativeBillingModeAndroid: AlternativeBillingModeAndroid.UserChoice,\n);\n"})}),"\n",(0,l.jsx)(n.p,{children:"Available modes:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"None"})," - Standard Google Play billing only (default)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"UserChoice"})," - User can choose between Google Play or alternative billing"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"AlternativeOnly"})," - Skip Google Play billing entirely"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"user-choice-billing-event-listener",children:"User Choice Billing Event Listener"}),"\n",(0,l.jsx)(n.p,{children:"New event stream for Android User Choice Billing:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"FlutterInappPurchase.instance.userChoiceBillingAndroid.listen((details) {\n  print('User selected alternative billing');\n  print('Products: ${details.products}');\n  print('Token: ${details.externalTransactionToken}');\n  // Process payment with your system and report token to Google\n});\n"})}),"\n",(0,l.jsx)(n.h3,{id:"android-replacement-modes",children:"Android Replacement Modes"}),"\n",(0,l.jsx)(n.p,{children:"Subscription upgrade/downgrade now uses replacement modes instead of proration modes:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"await iap.requestPurchase(\n  RequestPurchaseProps.subs((\n    ios: RequestSubscriptionIosProps(sku: 'yearly_sub'),\n    android: RequestSubscriptionAndroidProps(\n      skus: ['yearly_sub'],\n      replacementModeAndroid: AndroidReplacementMode.withTimeProration,\n    ),\n    useAlternativeBilling: null,\n  )),\n);\n"})}),"\n",(0,l.jsx)(n.p,{children:"Available modes:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"withTimeProration"})," (1) - Credit unused time towards new subscription"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"chargeProratedPrice"})," (2) - Charge prorated price immediately"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"withoutProration"})," (3) - No credit for unused time"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"deferred"})," (4) - New subscription starts at next renewal"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"chargeFullPrice"})," (5) - Charge full price immediately"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"breaking-changes",children:"Breaking Changes"}),"\n",(0,l.jsx)(n.h3,{id:"removed-methods",children:"Removed Methods"}),"\n",(0,l.jsx)(n.p,{children:"The following deprecated iOS-specific methods have been removed:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"getAvailableItemsIOS()"})," \u2192 Use ",(0,l.jsx)(n.code,{children:"getAvailablePurchases()"})," instead"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"getAppTransactionTypedIOS()"})," \u2192 Use ",(0,l.jsx)(n.code,{children:"getAppTransactionIOS()"})," instead"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"getPurchaseHistoriesIOS()"})," \u2192 Use ",(0,l.jsx)(n.code,{children:"getAvailablePurchases(onlyIncludeActiveItemsIOS: false)"})," instead"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"api-changes",children:"API Changes"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Event streams renamed"}),": ",(0,l.jsx)(n.code,{children:"purchaseUpdated"})," \u2192 ",(0,l.jsx)(n.code,{children:"purchaseUpdatedListener"}),", ",(0,l.jsx)(n.code,{children:"purchaseError"})," \u2192 ",(0,l.jsx)(n.code,{children:"purchaseErrorListener"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Union types required"}),": Handle ",(0,l.jsx)(n.code,{children:"FetchProductsResultProducts | FetchProductsResultError"})," explicitly"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Platform-specific types"}),": Products and Purchases are now platform-specific classes"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Non-nullable streams"}),": Event streams no longer emit nullable values"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"migration-guide",children:"Migration Guide"}),"\n",(0,l.jsx)(n.h3,{id:"1-update-event-listeners",children:"1. Update Event Listeners"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// Before\niap.purchaseUpdated.listen((purchase) {\n  if (purchase != null) {\n    handlePurchase(purchase);\n  }\n});\n\n// After\niap.purchaseUpdatedListener.listen((purchase) {\n  handlePurchase(purchase); // No null check needed\n});\n"})}),"\n",(0,l.jsx)(n.h3,{id:"2-handle-union-types",children:"2. Handle Union Types"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// Before\nfinal products = await iap.fetchProducts(...);\nfor (final product in products) {\n  print(product.title);\n}\n\n// After\nfinal result = await iap.fetchProducts(...);\nif (result is FetchProductsResultProducts) {\n  for (final product in result.value ?? []) {\n    if (product is ProductIOS) {\n      print(product.displayName);\n    } else if (product is ProductAndroid) {\n      print(product.title);\n    }\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"3-update-replacement-modes",children:"3. Update Replacement Modes"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// Before\nRequestPurchaseAndroidProps(\n  prorationModeAndroid: 1,\n)\n\n// After\nRequestPurchaseAndroidProps(\n  replacementModeAndroid: AndroidReplacementMode.withTimeProration,\n)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"4-replace-removed-methods",children:"4. Replace Removed Methods"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-dart",children:"// Before\nfinal items = await iap.getAvailableItemsIOS();\n\n// After\nfinal items = await iap.getAvailablePurchases();\n"})}),"\n",(0,l.jsx)(n.h2,{id:"benefits",children:"Benefits"}),"\n",(0,l.jsx)(n.h3,{id:"type-safety",children:"Type Safety"}),"\n",(0,l.jsx)(n.p,{children:"The new union type system provides compile-time safety:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Platform-specific properties are type-safe"}),"\n",(0,l.jsx)(n.li,{children:"No runtime errors from accessing wrong properties"}),"\n",(0,l.jsx)(n.li,{children:"Better IDE autocomplete and warnings"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"openiap-compliance",children:"OpenIAP Compliance"}),"\n",(0,l.jsx)(n.p,{children:"Aligns with OpenIAP specification across multiple platforms:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Expo IAP"}),"\n",(0,l.jsx)(n.li,{children:"Flutter In-App Purchase"}),"\n",(0,l.jsx)(n.li,{children:"Kotlin Multiplatform SDK"}),"\n",(0,l.jsx)(n.li,{children:"React Native IAP (planned)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"better-developer-experience",children:"Better Developer Experience"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Clearer code"}),": Platform differences are explicit"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Fewer bugs"}),": Type system catches errors at compile time"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Better tooling"}),": IDEs provide accurate suggestions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Self-documenting"}),": Code intent is clear from types"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"alternative-billing-flexibility",children:"Alternative Billing Flexibility"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"iOS"}),": External purchase links, notice sheets, multi-link support"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Android"}),": Alternative billing only, user choice billing, token reporting"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Unified API"}),": Cross-platform support with platform-specific features"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"platform-requirements",children:"Platform Requirements"}),"\n",(0,l.jsx)(n.h3,{id:"ios-alternative-billing",children:"iOS Alternative Billing"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"iOS 16.0+"})," for external purchase URLs"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"iOS 18.2+"})," for dynamic URLs and notice sheets"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Approval Required"}),": Must obtain approval from Apple to use external purchase features"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"URL Requirements"}),": URLs must use HTTPS, have no query parameters, and be 1,000 characters or fewer"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"android-alternative-billing-1",children:"Android Alternative Billing"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Google Play Billing Library 5.0+"})," with alternative billing enabled"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Approval Required"}),": Must be approved for alternative billing in Google Play Console"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Token Reporting"}),": Must report tokens to Google within 24 hours"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/api/overview",children:"API Documentation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/api/types",children:"Type Reference"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/migration/from-v6",children:"Migration Guide"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/guides/alternative-billing",children:"Alternative Billing Guide"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/examples/alternative-billing",children:"Alternative Billing Example"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/examples/purchase-flow",children:"Complete Examples"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/hyochan/flutter_inapp_purchase/releases/tag/7.0.0",children:"GitHub Release"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"acknowledgments",children:"Acknowledgments"}),"\n",(0,l.jsx)(n.p,{children:"Thanks to all contributors and the OpenIAP community for feedback and testing. Special thanks to early adopters who helped identify issues during the RC phase and provided valuable feedback on the alternative billing implementation."}),"\n",(0,l.jsxs)(n.p,{children:["Ready to upgrade? Check out our updated ",(0,l.jsx)(n.a,{href:"/docs/api/overview",children:"documentation"}),", ",(0,l.jsx)(n.a,{href:"/docs/migration/from-v6",children:"migration guide"}),", and ",(0,l.jsx)(n.a,{href:"/docs/examples/purchase-flow",children:"examples"}),"!"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},6548:e=>{e.exports=JSON.parse('{"permalink":"/flutter_inapp_purchase/blog/7.0.0-release","editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/blog/2025-10-04-7.0.0.release.md","source":"@site/blog/2025-10-04-7.0.0.release.md","title":"Release 7.0.0 - OpenIAP GQL 1.0.10, Type Safety & Alternative Billing","description":"Release 7.0.0 migrates to OpenIAP GQL 1.0.10, introducing union types, platform-specific classes, enhanced type safety, and comprehensive alternative billing support for both iOS and Android platforms.","date":"2025-10-04T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/flutter_inapp_purchase/blog/tags/release","description":"New version releases and updates"},{"inline":false,"label":"OpenIAP","permalink":"/flutter_inapp_purchase/blog/tags/openiap","description":"OpenIAP ecosystem updates"},{"inline":false,"label":"Flutter","permalink":"/flutter_inapp_purchase/blog/tags/flutter","description":"Flutter framework related topics"},{"inline":false,"label":"In-App Purchase","permalink":"/flutter_inapp_purchase/blog/tags/in-app-purchase","description":"In-app purchase implementation and best practices"},{"inline":false,"label":"Breaking Change","permalink":"/flutter_inapp_purchase/blog/tags/breaking-change","description":"Breaking changes and migration guides"},{"inline":false,"label":"Alternative Billing","permalink":"/flutter_inapp_purchase/blog/tags/alternative-billing","description":"Alternative billing and external payment features"}],"readingTime":5.03,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"Maintainer of flutter_inapp_purchase & expo-iap","url":"https://github.com/hyochan","page":{"permalink":"/flutter_inapp_purchase/blog/authors/hyochan"},"socials":{"x":"https://x.com/hyodotdev","github":"https://github.com/hyochan"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"7.0.0-release","title":"Release 7.0.0 - OpenIAP GQL 1.0.10, Type Safety & Alternative Billing","authors":["hyochan"],"tags":["release","openiap","flutter","in-app-purchase","breaking-change","alternative-billing"],"date":"2025-10-04T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"Release 7.1.0 - Simplified API with Direct List Returns","permalink":"/flutter_inapp_purchase/blog/7.1.0-release"},"nextItem":{"title":"Release 6.8.0 - Full OpenIAP Ecosystem Adoption","permalink":"/flutter_inapp_purchase/blog/6.8.0-release"}}')},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var r=i(6540);const l={},s=r.createContext(l);function t(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);