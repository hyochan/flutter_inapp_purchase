"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[1273],{4173:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>o});var s=i(5433),r=i(4848),a=i(8453);const t={slug:"6.6.0-release",title:"Release 6.6.0 - Android OpenIAP module",authors:["hyochan"],tags:["release","flutter","in-app-purchase"],date:new Date("2025-09-12T00:00:00.000Z")},l="6.6.0 Release",c={authorsImageUrls:[void 0]},o=[{value:"Highlights",id:"highlights",level:2},{value:"Breaking Changes &amp; Migration",id:"breaking-changes--migration",level:2},{value:"Transaction Identifier",id:"transaction-identifier",level:3},{value:"Purchase Token",id:"purchase-token",level:3},{value:"Receipt Data (iOS)",id:"receipt-data-ios",level:3},{value:"What to change in your code",id:"what-to-change-in-your-code",level:3},{value:"Notes on Backward Compatibility",id:"notes-on-backward-compatibility",level:3},{value:"6.6.1 follow-up",id:"661-follow-up",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Short and sweet \u2014 this release brings the Android migration to openiap-google,\ntighter null-safety, and example stability fixes. We also rolled in the follow\nup maintenance work that shipped as 6.6.1 so you have a single snapshot of the\n6.6 line."}),"\n",(0,r.jsx)(n.h2,{id:"highlights",children:"Highlights"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Android: Switched to openiap-google with coroutine-based connection gating and improved error logging."}),"\n",(0,r.jsx)(n.li,{children:"Dart: More robust product parsing and safer generics to avoid UI stalls."}),"\n",(0,r.jsx)(n.li,{children:"iOS: Added small helper methods (subscription group, App Store country, typed app transaction, histories)."}),"\n",(0,r.jsx)(n.li,{children:"Example: Guarded mounted across async paths to prevent setState after dispose."}),"\n",(0,r.jsx)(n.li,{children:"Tooling: Pre-commit formatting matches CI; avoids staging untracked files."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"breaking-changes--migration",children:"Breaking Changes & Migration"}),"\n",(0,r.jsx)(n.p,{children:"We\u2019re standardizing identifiers and tokens across platforms. Please review and migrate accordingly."}),"\n",(0,r.jsx)(n.h3,{id:"transaction-identifier",children:"Transaction Identifier"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Canonical field: ",(0,r.jsx)(n.code,{children:"purchase.id"})]}),"\n",(0,r.jsxs)(n.li,{children:["Deprecated: ",(0,r.jsx)(n.code,{children:"transactionId"})," (kept for compatibility, will be removed in a future release)"]}),"\n",(0,r.jsxs)(n.li,{children:["Impacted APIs:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Finish transaction on iOS now uses ",(0,r.jsx)(n.code,{children:"purchase.id"})," internally. If you previously passed or stored ",(0,r.jsx)(n.code,{children:"transactionId"}),", switch to ",(0,r.jsx)(n.code,{children:"purchase.id"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"await FlutterInappPurchase.instance.finishTransaction(\n  purchase, // relies on purchase.transactionId\n);\n"})}),"\n",(0,r.jsx)(n.p,{children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"await FlutterInappPurchase.instance.finishTransaction(\n  purchase, // uses purchase.id (canonical)\n);\nfinal txnId = purchase.id; // use this instead of transactionId\n"})}),"\n",(0,r.jsx)(n.h3,{id:"purchase-token",children:"Purchase Token"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Canonical field: ",(0,r.jsx)(n.code,{children:"purchaseToken"})]}),"\n",(0,r.jsxs)(n.li,{children:["Deprecated: ",(0,r.jsx)(n.code,{children:"purchaseTokenAndroid"})," (use ",(0,r.jsx)(n.code,{children:"purchaseToken"})," everywhere)"]}),"\n",(0,r.jsxs)(n.li,{children:["Android subscription upgrade/downgrade:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["When specifying the existing subscription, pass the token under ",(0,r.jsx)(n.code,{children:"purchaseToken"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"await requestPurchase(\n  'premium_monthly',\n  replacementModeAndroid: AndroidReplacementMode.withTimeProration.value,\n  purchaseTokenAndroid: existingSub.purchaseToken,\n);\n"})}),"\n",(0,r.jsx)(n.p,{children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"await FlutterInappPurchase.instance.requestPurchase(\n  options: RequestPurchase(\n    android: AndroidRequestSubscriptionProps(\n      skus: ['premium_monthly'],\n      subscriptionOffers: myOffers,\n      // unified token field\n      // when calling platform channel beneath, the key is `purchaseToken`\n    ),\n  ),\n);\n// For server validation, always send `purchase.purchaseToken` (Android)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"receipt-data-ios",children:"Receipt Data (iOS)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Canonical verification input: ",(0,r.jsx)(n.code,{children:"purchaseToken"})," (JWS representation from StoreKit 2)"]}),"\n",(0,r.jsxs)(n.li,{children:["Deprecated: ",(0,r.jsx)(n.code,{children:"transactionReceipt"})," for server-side verification flows"]}),"\n",(0,r.jsxs)(n.li,{children:["App-side verification:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"validateReceiptIOS(sku: ...)"})," for local testing only. It returns a JWS as ",(0,r.jsx)(n.code,{children:"purchaseToken"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["For production, send the returned ",(0,r.jsx)(n.code,{children:"purchaseToken"})," to your server and verify with Apple public keys."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"// Legacy (server hits Apple verifyReceipt endpoint with raw receipt)\nawait http.post(url, body: {'receipt-data': purchase.transactionReceipt});\n"})}),"\n",(0,r.jsx)(n.p,{children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final res = await FlutterInappPurchase.instance.validateReceiptIOS(sku: productId);\nif (res.isValid) {\n  await yourServer.verifyIOS(purchaseToken: res.purchaseToken); // JWS\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Clarification"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"purchase.id"})," as the canonical transaction identifier for logging, idempotency, and ",(0,r.jsx)(n.code,{children:"finishTransaction"})," on iOS."]}),"\n",(0,r.jsxs)(n.li,{children:["Receipt verification itself uses ",(0,r.jsx)(n.code,{children:"purchaseToken"})," (JWS), not ",(0,r.jsx)(n.code,{children:"purchase.id"})," or ",(0,r.jsx)(n.code,{children:"transactionId"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"what-to-change-in-your-code",children:"What to change in your code"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replace ",(0,r.jsx)(n.code,{children:"purchase.transactionId"})," with ",(0,r.jsx)(n.code,{children:"purchase.id"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Replace ",(0,r.jsx)(n.code,{children:"purchaseTokenAndroid"})," with ",(0,r.jsx)(n.code,{children:"purchaseToken"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["For iOS server verification, stop sending ",(0,r.jsx)(n.code,{children:"transactionReceipt"}),"; switch to the JWS returned as ",(0,r.jsx)(n.code,{children:"purchaseToken"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"notes-on-backward-compatibility",children:"Notes on Backward Compatibility"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["This release keeps ",(0,r.jsx)(n.code,{children:"transactionId"})," and ",(0,r.jsx)(n.code,{children:"transactionReceipt"})," readable to ease migration, but they are deprecated and will be removed in a future version."]}),"\n",(0,r.jsxs)(n.li,{children:["Internally, finishing transactions on iOS already uses ",(0,r.jsx)(n.code,{children:"purchase.id"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"661-follow-up",children:"6.6.1 follow-up"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Completed docs/examples migration from ",(0,r.jsx)(n.code,{children:"PurchasedItem"})," \u2192 ",(0,r.jsx)(n.code,{children:"Purchase"})," so the new\ntypes are consistent everywhere."]}),"\n",(0,r.jsxs)(n.li,{children:["Added unified helpers that callers had to bolt on manually:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Purchase.quantity"})," (iOS quantity, defaults to 1 on Android)"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Purchase.isAutoRenewing"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Hardened product parsing so ",(0,r.jsx)(n.code,{children:"Product.id"})," is always populated regardless of\nstore quirks."]}),"\n",(0,r.jsxs)(n.li,{children:["Example UX tweaks: no alert for user-cancelled purchases; avoids returning\ninside ",(0,r.jsx)(n.code,{children:"finally"})," blocks."]}),"\n",(0,r.jsx)(n.li,{children:"Analyzer clean-up: targeted ignores for legacy symbols, opacity lints, and\nduplicate library directives."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5433:e=>{e.exports=JSON.parse('{"permalink":"/flutter_inapp_purchase/blog/6.6.0-release","editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/blog/2025-09-12-6.6.0.release.md","source":"@site/blog/2025-09-12-6.6.0.release.md","title":"Release 6.6.0 - Android OpenIAP module","description":"Short and sweet \u2014 this release brings the Android migration to openiap-google,","date":"2025-09-12T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/flutter_inapp_purchase/blog/tags/release","description":"New version releases and updates"},{"inline":false,"label":"Flutter","permalink":"/flutter_inapp_purchase/blog/tags/flutter","description":"Flutter framework related topics"},{"inline":false,"label":"In-App Purchase","permalink":"/flutter_inapp_purchase/blog/tags/in-app-purchase","description":"In-app purchase implementation and best practices"}],"readingTime":2.46,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"Maintainer of flutter_inapp_purchase & expo-iap","url":"https://github.com/hyochan","page":{"permalink":"/flutter_inapp_purchase/blog/authors/hyochan"},"socials":{"x":"https://x.com/hyodotdev","github":"https://github.com/hyochan"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"6.6.0-release","title":"Release 6.6.0 - Android OpenIAP module","authors":["hyochan"],"tags":["release","flutter","in-app-purchase"],"date":"2025-09-12T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"Release 6.7.0","permalink":"/flutter_inapp_purchase/blog/6.7.0-release"},"nextItem":{"title":"Release 6.5.0","permalink":"/flutter_inapp_purchase/blog/6.5.0-release"}}')},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(6540);const r={},a=s.createContext(r);function t(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);