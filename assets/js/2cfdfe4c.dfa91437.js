"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[5960],{1308:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/core-methods","title":"Core Methods","description":"Essential methods for implementing in-app purchases with flutterinapppurchase v7.0. All methods follow the OpenIAP specification and support both iOS and Android platforms.","source":"@site/versioned_docs/version-7.0/api/core-methods.md","sourceDirName":"api","slug":"/api/core-methods","permalink":"/flutter_inapp_purchase/docs/7.0/api/core-methods","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/versioned_docs/version-7.0/api/core-methods.md","tags":[],"version":"7.0","sidebarPosition":3,"frontMatter":{"title":"Core Methods","sidebar_position":3}}');var r=i(4848),l=i(8453);const t={title:"Core Methods",sidebar_position:3},a="Core Methods",c={},d=[{value:"Event Streams",id:"event-streams",level:2},{value:"purchaseUpdatedListener",id:"purchaseupdatedlistener",level:3},{value:"purchaseErrorListener",id:"purchaseerrorlistener",level:3},{value:"Connection Management",id:"connection-management",level:2},{value:"initConnection()",id:"initconnection",level:3},{value:"endConnection()",id:"endconnection",level:3},{value:"Product Loading",id:"product-loading",level:2},{value:"fetchProducts()",id:"fetchproducts",level:3},{value:"Purchase Processing",id:"purchase-processing",level:2},{value:"requestPurchase()",id:"requestpurchase",level:3},{value:"requestPurchaseWithBuilder()",id:"requestpurchasewithbuilder",level:3},{value:"Transaction Management",id:"transaction-management",level:2},{value:"finishTransaction()",id:"finishtransaction",level:3},{value:"Purchase History",id:"purchase-history",level:2},{value:"getAvailablePurchases()",id:"getavailablepurchases",level:3},{value:"restorePurchases()",id:"restorepurchases",level:3},{value:"Subscription Management",id:"subscription-management",level:2},{value:"getActiveSubscriptions()",id:"getactivesubscriptions",level:3},{value:"hasActiveSubscriptions()",id:"hasactivesubscriptions",level:3},{value:"Platform-Specific Methods",id:"platform-specific-methods",level:2},{value:"iOS-Specific Methods",id:"ios-specific-methods",level:3},{value:"presentCodeRedemptionSheetIOS()",id:"presentcoderedemptionsheetios",level:4},{value:"showManageSubscriptionsIOS()",id:"showmanagesubscriptionsios",level:4},{value:"isEligibleForIntroOfferIOS()",id:"iseligibleforintroofferios",level:4},{value:"subscriptionStatusIOS()",id:"subscriptionstatusios",level:4},{value:"Android-Specific Methods",id:"android-specific-methods",level:3},{value:"deepLinkToSubscriptions()",id:"deeplinktosubscriptions",level:4},{value:"acknowledgePurchaseAndroid()",id:"acknowledgepurchaseandroid",level:4},{value:"consumePurchaseAndroid()",id:"consumepurchaseandroid",level:4},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Always Set Up Listeners First",id:"1-always-set-up-listeners-first",level:3},{value:"2. Handle Purchase Results in Listeners",id:"2-handle-purchase-results-in-listeners",level:3},{value:"3. Always Verify Purchases Server-Side",id:"3-always-verify-purchases-server-side",level:3},{value:"4. Cancel Subscriptions in Dispose",id:"4-cancel-subscriptions-in-dispose",level:3},{value:"Alternative Billing Methods",id:"alternative-billing-methods",level:2},{value:"iOS External Purchase Methods",id:"ios-external-purchase-methods",level:3},{value:"presentExternalPurchaseLinkIOS()",id:"presentexternalpurchaselinkios",level:4},{value:"Android Alternative Billing Methods",id:"android-alternative-billing-methods",level:3},{value:"checkAlternativeBillingAvailabilityAndroid()",id:"checkalternativebillingavailabilityandroid",level:4},{value:"showAlternativeBillingDialogAndroid()",id:"showalternativebillingdialogandroid",level:4},{value:"createAlternativeBillingTokenAndroid()",id:"createalternativebillingtokenandroid",level:4},{value:"Alternative Billing Configuration",id:"alternative-billing-configuration",level:4},{value:"See Also",id:"see-also",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"core-methods",children:"Core Methods"})}),"\n",(0,r.jsx)(n.p,{children:"Essential methods for implementing in-app purchases with flutter_inapp_purchase v7.0. All methods follow the OpenIAP specification and support both iOS and Android platforms."}),"\n",(0,r.jsx)(n.p,{children:"All methods are available through the singleton instance:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final iap = FlutterInappPurchase.instance;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"event-streams",children:"Event Streams"}),"\n",(0,r.jsx)(n.h3,{id:"purchaseupdatedlistener",children:"purchaseUpdatedListener"}),"\n",(0,r.jsx)(n.p,{children:"Stream that emits successful purchases."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Stream<Purchase> get purchaseUpdatedListener\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"StreamSubscription? _purchaseUpdatedSubscription;\n\n_purchaseUpdatedSubscription = iap.purchaseUpdatedListener.listen(\n  (purchase) {\n    debugPrint('Purchase received: ${purchase.productId}');\n    _handlePurchase(purchase);\n  },\n);\n\n// Don't forget to cancel in dispose\n@override\nvoid dispose() {\n  _purchaseUpdatedSubscription?.cancel();\n  super.dispose();\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"purchaseerrorlistener",children:"purchaseErrorListener"}),"\n",(0,r.jsx)(n.p,{children:"Stream that emits purchase errors."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Stream<PurchaseError> get purchaseErrorListener\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"StreamSubscription? _purchaseErrorSubscription;\n\n_purchaseErrorSubscription = iap.purchaseErrorListener.listen(\n  (error) {\n    debugPrint('Purchase error: ${error.code} - ${error.message}');\n    _handleError(error);\n  },\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"connection-management",children:"Connection Management"}),"\n",(0,r.jsx)(n.h3,{id:"initconnection",children:"initConnection()"}),"\n",(0,r.jsx)(n.p,{children:"Initializes the connection to the platform store."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<bool> initConnection({\n  AlternativeBillingModeAndroid? alternativeBillingModeAndroid,\n}) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"alternativeBillingModeAndroid"})," - Android alternative billing mode (optional)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"true"})," if initialization successful"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"try {\n  await iap.initConnection();\n  debugPrint('IAP connection initialized');\n} catch (e) {\n  debugPrint('Failed to initialize IAP: $e');\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform Differences"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"iOS"}),": Connects to StoreKit 2 (iOS 15+) or StoreKit 1 (fallback)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Android"}),": Connects to Google Play Billing Library v6+"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"endconnection",children:"endConnection()"}),"\n",(0,r.jsx)(n.p,{children:"Ends the connection to the platform store."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<bool> endConnection() async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"true"})," if connection ended successfully"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"await iap.endConnection();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"product-loading",children:"Product Loading"}),"\n",(0,r.jsx)(n.h3,{id:"fetchproducts",children:"fetchProducts()"}),"\n",(0,r.jsx)(n.p,{children:"Loads product information from the store."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<FetchProductsResult> fetchProducts({\n  required List<String> skus,\n  ProductQueryType? type,\n}) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skus"})," - List of product identifiers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"})," - Optional ",(0,r.jsx)(n.code,{children:"ProductQueryType.InApp"})," or ",(0,r.jsx)(n.code,{children:"ProductQueryType.Subs"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"FetchProductsResult"})," - union type containing either products or subscriptions"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final result = await iap.fetchProducts(\n  skus: ['product_1', 'premium_upgrade'],\n  type: ProductQueryType.InApp,\n);\n\nif (result is FetchProductsResultProducts) {\n  for (final product in result.products) {\n    if (product is ProductIOS) {\n      debugPrint('iOS Product: ${product.displayName} - ${product.displayPrice}');\n    } else if (product is ProductAndroid) {\n      debugPrint('Android Product: ${product.title}');\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"purchase-processing",children:"Purchase Processing"}),"\n",(0,r.jsx)(n.h3,{id:"requestpurchase",children:"requestPurchase()"}),"\n",(0,r.jsx)(n.p,{children:"Initiates a purchase request."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<RequestPurchaseResult> requestPurchase(\n  RequestPurchaseProps params,\n) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"params"})," - Purchase request props (use ",(0,r.jsx)(n.code,{children:"RequestPurchaseProps.inApp()"})," or ",(0,r.jsx)(n.code,{children:"RequestPurchaseProps.subs()"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example (In-App Purchase)"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"await iap.requestPurchase(\n  RequestPurchaseProps.inApp((\n    ios: RequestPurchaseIosProps(sku: 'product_id'),\n    android: RequestPurchaseAndroidProps(skus: ['product_id']),\n  )),\n);\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example (Subscription)"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"await iap.requestPurchase(\n  RequestPurchaseProps.subs(\n    request: RequestPurchasePropsByPlatforms(\n      ios: RequestPurchaseIosProps(sku: 'subscription_id'),\n      android: RequestPurchaseAndroidProps(skus: ['subscription_id']),\n    ),\n  ),\n);\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Important"}),": Results are delivered via ",(0,r.jsx)(n.code,{children:"purchaseUpdatedListener"})," and ",(0,r.jsx)(n.code,{children:"purchaseErrorListener"}),", not as a return value."]}),"\n",(0,r.jsx)(n.h3,{id:"requestpurchasewithbuilder",children:"requestPurchaseWithBuilder()"}),"\n",(0,r.jsx)(n.p,{children:"Builder-style purchase request (alternative API)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<RequestPurchaseResult> requestPurchaseWithBuilder({\n  required RequestPurchaseBuilder Function(RequestPurchaseBuilder) build,\n}) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"await iap.requestPurchaseWithBuilder(\n  build: (builder) => builder\n    ..type = ProductType.InApp\n    ..withIOS((ios) => ios..sku = 'product_id')\n    ..withAndroid((android) => android..skus = ['product_id']),\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"transaction-management",children:"Transaction Management"}),"\n",(0,r.jsx)(n.h3,{id:"finishtransaction",children:"finishTransaction()"}),"\n",(0,r.jsx)(n.p,{children:"Completes a transaction after successful purchase processing."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<String?> finishTransaction({\n  required Purchase purchase,\n  bool isConsumable = false,\n}) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"purchase"})," - The purchase to finish"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"isConsumable"})," - Whether the product is consumable (consumes on Android, finishes on iOS)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"iap.purchaseUpdatedListener.listen((purchase) async {\n  // Verify purchase on server\n  final isValid = await verifyPurchaseOnServer(purchase);\n\n  if (!isValid) return;\n\n  // Deliver content\n  await deliverContent(purchase.productId);\n\n  // Finish transaction\n  await iap.finishTransaction(\n    purchase: purchase,\n    isConsumable: true, // For consumable products\n  );\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform Behavior"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"iOS"}),": Calls ",(0,r.jsx)(n.code,{children:"finishTransaction"})," on the transaction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Android"}),": Calls ",(0,r.jsx)(n.code,{children:"consumePurchase"})," (if ",(0,r.jsx)(n.code,{children:"isConsumable: true"}),") or ",(0,r.jsx)(n.code,{children:"acknowledgePurchase"})," (if ",(0,r.jsx)(n.code,{children:"isConsumable: false"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"purchase-history",children:"Purchase History"}),"\n",(0,r.jsx)(n.h3,{id:"getavailablepurchases",children:"getAvailablePurchases()"}),"\n",(0,r.jsx)(n.p,{children:"Gets available purchases with optional filtering."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<List<Purchase>> getAvailablePurchases({\n  bool? onlyIncludeActiveItemsIOS,\n  bool? alsoPublishToEventListenerIOS,\n}) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"onlyIncludeActiveItemsIOS"})," - When ",(0,r.jsx)(n.code,{children:"true"})," (default), excludes expired subscriptions (iOS only)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"alsoPublishToEventListenerIOS"})," - When ",(0,r.jsx)(n.code,{children:"true"}),", replays purchases through ",(0,r.jsx)(n.code,{children:"purchaseUpdatedListener"})," (iOS only)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": List of available purchases"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"// Get only active purchases (default)\nfinal purchases = await iap.getAvailablePurchases();\n\n// Include expired subscriptions (iOS)\nfinal allPurchases = await iap.getAvailablePurchases(\n  onlyIncludeActiveItemsIOS: false,\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"restorepurchases",children:"restorePurchases()"}),"\n",(0,r.jsx)(n.p,{children:"Restores previous purchases."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<List<Purchase>> restorePurchases() async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": List of restored purchases"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final restored = await iap.restorePurchases();\ndebugPrint('Restored ${restored.length} purchases');\n\nfor (final purchase in restored) {\n  await deliverContent(purchase.productId);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"subscription-management",children:"Subscription Management"}),"\n",(0,r.jsx)(n.h3,{id:"getactivesubscriptions",children:"getActiveSubscriptions()"}),"\n",(0,r.jsx)(n.p,{children:"Gets lightweight subscription status (recommended for quick checks)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<List<ActiveSubscription>> getActiveSubscriptions(\n  List<String> skus,\n) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skus"})," - List of subscription product IDs to check"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": List of ",(0,r.jsx)(n.code,{children:"ActiveSubscription"})," objects (lightweight)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final subscriptions = await iap.getActiveSubscriptions([\n  'monthly_sub',\n  'yearly_sub',\n]);\n\nfor (final sub in subscriptions) {\n  debugPrint('${sub.productId}: active=${sub.isActive}');\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use Case"}),": Quick subscription status checks without full purchase details."]}),"\n",(0,r.jsx)(n.h3,{id:"hasactivesubscriptions",children:"hasActiveSubscriptions()"}),"\n",(0,r.jsx)(n.p,{children:"Checks if user has any active subscriptions."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<bool> hasActiveSubscriptions(List<String> skus) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skus"})," - List of subscription product IDs to check"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"true"})," if any subscription is active"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final hasActive = await iap.hasActiveSubscriptions([\n  'monthly_sub',\n  'yearly_sub',\n]);\n\nif (hasActive) {\n  // Show premium content\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"platform-specific-methods",children:"Platform-Specific Methods"}),"\n",(0,r.jsx)(n.h3,{id:"ios-specific-methods",children:"iOS-Specific Methods"}),"\n",(0,r.jsx)(n.h4,{id:"presentcoderedemptionsheetios",children:"presentCodeRedemptionSheetIOS()"}),"\n",(0,r.jsx)(n.p,{children:"Presents the App Store code redemption sheet."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> presentCodeRedemptionSheetIOS() async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"if (Platform.isIOS) {\n  await iap.presentCodeRedemptionSheetIOS();\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Requirements"}),": iOS 14.0+"]}),"\n",(0,r.jsx)(n.h4,{id:"showmanagesubscriptionsios",children:"showManageSubscriptionsIOS()"}),"\n",(0,r.jsx)(n.p,{children:"Shows the subscription management interface."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> showManageSubscriptionsIOS({\n  String? productId,\n}) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"if (Platform.isIOS) {\n  await iap.showManageSubscriptionsIOS(\n    productId: 'subscription_id', // Optional\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"iseligibleforintroofferios",children:"isEligibleForIntroOfferIOS()"}),"\n",(0,r.jsx)(n.p,{children:"Checks if user is eligible for introductory offer."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<bool> isEligibleForIntroOfferIOS(String productId) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"if (Platform.isIOS) {\n  final eligible = await iap.isEligibleForIntroOfferIOS('subscription_id');\n  debugPrint('Eligible for intro offer: $eligible');\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"subscriptionstatusios",children:"subscriptionStatusIOS()"}),"\n",(0,r.jsx)(n.p,{children:"Gets detailed subscription status (iOS only)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<List<SubscriptionStatusIOS>> subscriptionStatusIOS(\n  List<String> productIds,\n) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"if (Platform.isIOS) {\n  final statuses = await iap.subscriptionStatusIOS(['subscription_id']);\n  for (final status in statuses) {\n    debugPrint('Status: ${status.state}');\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"android-specific-methods",children:"Android-Specific Methods"}),"\n",(0,r.jsx)(n.h4,{id:"deeplinktosubscriptions",children:"deepLinkToSubscriptions()"}),"\n",(0,r.jsx)(n.p,{children:"Opens the Google Play subscription management page."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> deepLinkToSubscriptions({\n  DeepLinkOptions? options,\n}) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"if (Platform.isAndroid) {\n  await iap.deepLinkToSubscriptions(\n    options: DeepLinkOptions(productId: 'subscription_id'),\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"acknowledgepurchaseandroid",children:"acknowledgePurchaseAndroid()"}),"\n",(0,r.jsx)(n.p,{children:"Acknowledges a purchase on Android."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> acknowledgePurchaseAndroid({\n  required String purchaseToken,\n}) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"if (Platform.isAndroid) {\n  await iap.acknowledgePurchaseAndroid(\n    purchaseToken: purchase.purchaseToken,\n  );\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": Use ",(0,r.jsx)(n.code,{children:"finishTransaction()"})," for cross-platform compatibility."]}),"\n",(0,r.jsx)(n.h4,{id:"consumepurchaseandroid",children:"consumePurchaseAndroid()"}),"\n",(0,r.jsx)(n.p,{children:"Consumes a purchase on Android."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> consumePurchaseAndroid({\n  required String purchaseToken,\n}) async\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"if (Platform.isAndroid) {\n  await iap.consumePurchaseAndroid(\n    purchaseToken: purchase.purchaseToken,\n  );\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": Use ",(0,r.jsx)(n.code,{children:"finishTransaction(isConsumable: true)"})," for cross-platform compatibility."]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"1-always-set-up-listeners-first",children:"1. Always Set Up Listeners First"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"@override\nvoid initState() {\n  super.initState();\n  _setupIAP();\n}\n\nFuture<void> _setupIAP() async {\n  // Set up listeners BEFORE initConnection\n  _purchaseUpdatedSubscription = iap.purchaseUpdatedListener.listen(\n    (purchase) => _handlePurchase(purchase),\n  );\n\n  _purchaseErrorSubscription = iap.purchaseErrorListener.listen(\n    (error) => _handleError(error),\n  );\n\n  // Then initialize\n  await iap.initConnection();\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-handle-purchase-results-in-listeners",children:"2. Handle Purchase Results in Listeners"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"// \u274c Wrong: Expecting result from requestPurchase\nfinal result = await iap.requestPurchase(...); // Returns immediately\n\n// \u2705 Correct: Handle in listener\niap.purchaseUpdatedListener.listen((purchase) {\n  // Purchase succeeded\n  _handlePurchase(purchase);\n});\n\niap.purchaseErrorListener.listen((error) {\n  // Purchase failed\n  _handleError(error);\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-always-verify-purchases-server-side",children:"3. Always Verify Purchases Server-Side"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> _handlePurchase(Purchase purchase) async {\n  // 1. Verify on server\n  final isValid = await verifyPurchaseOnServer(purchase);\n\n  if (!isValid) {\n    debugPrint('Invalid purchase');\n    return;\n  }\n\n  // 2. Deliver content\n  await deliverContent(purchase.productId);\n\n  // 3. Finish transaction\n  await iap.finishTransaction(\n    purchase: purchase,\n    isConsumable: false,\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-cancel-subscriptions-in-dispose",children:"4. Cancel Subscriptions in Dispose"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"@override\nvoid dispose() {\n  _purchaseUpdatedSubscription?.cancel();\n  _purchaseErrorSubscription?.cancel();\n  super.dispose();\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"alternative-billing-methods",children:"Alternative Billing Methods"}),"\n",(0,r.jsx)(n.h3,{id:"ios-external-purchase-methods",children:"iOS External Purchase Methods"}),"\n",(0,r.jsx)(n.h4,{id:"presentexternalpurchaselinkios",children:"presentExternalPurchaseLinkIOS()"}),"\n",(0,r.jsx)(n.p,{children:"Open an external purchase link in Safari to redirect users to your website for purchase. Requires iOS 16.0+."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<ExternalPurchaseLinkResultIOS> presentExternalPurchaseLinkIOS(String url)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"url"})," (String): The external purchase URL to open"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ",(0,r.jsx)(n.code,{children:"Future<ExternalPurchaseLinkResultIOS>"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class ExternalPurchaseLinkResultIOS {\n  final String? error;\n  final bool success;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final result = await FlutterInappPurchase.instance\n    .presentExternalPurchaseLinkIOS('https://your-site.com/checkout');\n\nif (result.error != null) {\n  print('Failed to open link: ${result.error}');\n} else if (result.success) {\n  print('User redirected to external purchase website');\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform:"})," iOS 16.0+"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Requires Apple approval and proper provisioning profile with external purchase entitlements"}),"\n",(0,r.jsx)(n.li,{children:"URLs must be configured in your app's Info.plist"}),"\n",(0,r.jsx)(n.li,{children:"Deep linking recommended to return users to your app after purchase"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Important Notes:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Purchase listeners will NOT fire when using external URLs"}),"\n",(0,r.jsx)(n.li,{children:"You must handle purchase validation on your backend"}),"\n",(0,r.jsx)(n.li,{children:"Implement deep linking to return users to your app"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See also:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.apple.com/documentation/storekit/external-purchase",children:"StoreKit External Purchase documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../guides/alternative-billing",children:"Alternative Billing Guide"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"android-alternative-billing-methods",children:"Android Alternative Billing Methods"}),"\n",(0,r.jsx)(n.h4,{id:"checkalternativebillingavailabilityandroid",children:"checkAlternativeBillingAvailabilityAndroid()"}),"\n",(0,r.jsx)(n.p,{children:"Check if alternative billing is available for the current user. This must be called before showing the alternative billing dialog."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<bool> checkAlternativeBillingAvailabilityAndroid()\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ",(0,r.jsx)(n.code,{children:"Future<bool>"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final isAvailable = await FlutterInappPurchase.instance\n    .checkAlternativeBillingAvailabilityAndroid();\n\nif (isAvailable) {\n  print('Alternative billing is available');\n} else {\n  print('Alternative billing not available for this user');\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform:"})," Android"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Must initialize connection with alternative billing mode"}),"\n",(0,r.jsx)(n.li,{children:"User must be eligible for alternative billing (determined by Google)"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"See also:"})," ",(0,r.jsx)(n.a,{href:"https://developer.android.com/google/play/billing/alternative",children:"Google Play Alternative Billing documentation"})]}),"\n",(0,r.jsx)(n.h4,{id:"showalternativebillingdialogandroid",children:"showAlternativeBillingDialogAndroid()"}),"\n",(0,r.jsx)(n.p,{children:"Show Google's required information dialog to inform users about alternative billing. This must be called after checking availability and before processing payment."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<bool> showAlternativeBillingDialogAndroid()\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ",(0,r.jsx)(n.code,{children:"Future<bool>"})," - Returns ",(0,r.jsx)(n.code,{children:"true"})," if user accepted, ",(0,r.jsx)(n.code,{children:"false"})," if declined"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final userAccepted = await FlutterInappPurchase.instance\n    .showAlternativeBillingDialogAndroid();\n\nif (userAccepted) {\n  print('User accepted alternative billing');\n  // Proceed with your payment flow\n} else {\n  print('User declined alternative billing');\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform:"})," Android"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," This dialog is required by Google Play's alternative billing policy. You must show this before redirecting users to your payment system."]}),"\n",(0,r.jsx)(n.h4,{id:"createalternativebillingtokenandroid",children:"createAlternativeBillingTokenAndroid()"}),"\n",(0,r.jsx)(n.p,{children:"Generate a reporting token after successfully processing payment through your payment system. This token must be reported to Google Play within 24 hours."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<String?> createAlternativeBillingTokenAndroid()\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ",(0,r.jsx)(n.code,{children:"Future<String?>"})," - Returns the token or ",(0,r.jsx)(n.code,{children:"null"})," if creation failed"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"// After successfully processing payment in your system\nfinal token = await FlutterInappPurchase.instance\n    .createAlternativeBillingTokenAndroid();\n\nif (token != null) {\n  print('Token created: $token');\n  // Send this token to your backend to report to Google\n  await reportTokenToGooglePlay(token);\n} else {\n  print('Failed to create token');\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform:"})," Android"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Important:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Token must be reported to Google Play backend within 24 hours"}),"\n",(0,r.jsx)(n.li,{children:"Requires server-side integration with Google Play Developer API"}),"\n",(0,r.jsx)(n.li,{children:"Failure to report will result in refund and possible account suspension"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"alternative-billing-configuration",children:"Alternative Billing Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"// Initialize with alternative billing mode\nawait FlutterInappPurchase.instance.initConnection(\n  alternativeBillingModeAndroid: AlternativeBillingModeAndroid.UserChoice,\n  // or AlternativeBillingModeAndroid.AlternativeOnly\n);\n\n// To change mode, reinitialize\nawait FlutterInappPurchase.instance.endConnection();\nawait FlutterInappPurchase.instance.initConnection(\n  alternativeBillingModeAndroid: AlternativeBillingModeAndroid.AlternativeOnly,\n);\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Billing Modes:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"enum AlternativeBillingModeAndroid {\n  None,              // Default - no alternative billing\n  UserChoice,        // Users choose between Google Play or your payment system\n  AlternativeOnly,   // Only your payment system is available\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Complete Flow Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> purchaseWithAlternativeBilling(String productId) async {\n  // Step 1: Check availability\n  final isAvailable = await FlutterInappPurchase.instance\n      .checkAlternativeBillingAvailabilityAndroid();\n\n  if (!isAvailable) {\n    throw Exception('Alternative billing not available');\n  }\n\n  // Step 2: Show required dialog\n  final userAccepted = await FlutterInappPurchase.instance\n      .showAlternativeBillingDialogAndroid();\n\n  if (!userAccepted) {\n    throw Exception('User declined alternative billing');\n  }\n\n  // Step 3: Process payment in your system\n  final paymentResult = await processPaymentInYourSystem(productId);\n  if (!paymentResult.success) {\n    throw Exception('Payment failed');\n  }\n\n  // Step 4: Create reporting token\n  final token = await FlutterInappPurchase.instance\n      .createAlternativeBillingTokenAndroid();\n\n  if (token == null) {\n    throw Exception('Failed to create token');\n  }\n\n  // Step 5: Report to Google (must be done within 24 hours)\n  await reportToGooglePlayBackend(token, productId, paymentResult);\n\n  print('Alternative billing completed successfully');\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"See also:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.android.com/google/play/billing/alternative",children:"Google Play Alternative Billing documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../guides/alternative-billing",children:"Alternative Billing Guide"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../examples/alternative-billing",children:"Alternative Billing Example"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./types",children:"Types"})," - Type definitions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./types/error-codes",children:"Error Codes"})," - Error handling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../guides/lifecycle",children:"Purchase Lifecycle"})," - Complete purchase flow"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../guides/subscription-validation",children:"Subscription Guide"})," - Subscription management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../guides/alternative-billing",children:"Alternative Billing Guide"})," - Alternative billing implementation"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var s=i(6540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);