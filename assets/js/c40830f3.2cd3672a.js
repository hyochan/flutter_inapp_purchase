"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[1526],{2932:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api/methods/get-products","title":"fetchProducts","description":"fetchProducts() is the unified way to load in-app products or subscriptions from the store, consolidating the legacy helpers into a single API.","source":"@site/docs/api/methods/get-products.md","sourceDirName":"api/methods","slug":"/api/methods/get-products","permalink":"/flutter_inapp_purchase/docs/api/methods/get-products","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/docs/api/methods/get-products.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"fetchProducts"}}');var s=n(4848),i=n(8453);const c={sidebar_position:2,title:"fetchProducts"},d="fetchProducts()",o={},l=[{value:"Signature",id:"signature",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Fetch in-app products",id:"fetch-in-app-products",level:3},{value:"Fetch subscriptions",id:"fetch-subscriptions",level:3},{value:"Fetch both types",id:"fetch-both-types",level:3},{value:"Fetch all products at once",id:"fetch-all-products-at-once",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Platform Notes",id:"platform-notes",level:2},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"Migration Notes",id:"migration-notes",level:2},{value:"From v6.x to v7.0",id:"from-v6x-to-v70",level:3},{value:"Key Changes",id:"key-changes",level:3},{value:"Related APIs",id:"related-apis",level:2},{value:"See Also",id:"see-also",level:2}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"fetchproducts",children:"fetchProducts()"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"fetchProducts()"})," is the unified way to load in-app products or subscriptions from the store, consolidating the legacy helpers into a single API."]}),"\n",(0,s.jsx)(r.h2,{id:"signature",children:"Signature"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-dart",children:"Future<List<T>> fetchProducts<T extends ProductCommon>({\n  required List<String> skus,\n  ProductQueryType type = ProductQueryType.InApp,\n})\n"})}),"\n",(0,s.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Parameter"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Required"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"skus"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"List<String>"})}),(0,s.jsx)(r.td,{children:"\u2705"}),(0,s.jsx)(r.td,{children:"Store identifiers to query (Google Play product IDs / App Store product identifiers)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"type"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"ProductQueryType"})}),(0,s.jsx)(r.td,{children:"\u274c"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"ProductQueryType.InApp"})," (default), ",(0,s.jsx)(r.code,{children:"ProductQueryType.Subs"}),", or ",(0,s.jsx)(r.code,{children:"ProductQueryType.All"})]})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsx)(r.p,{children:"Returns a typed list based on the generic type parameter:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"InApp"}),": Use ",(0,s.jsx)(r.code,{children:"<Product>"})," type parameter"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Subs"}),": Use ",(0,s.jsx)(r.code,{children:"<ProductSubscription>"})," type parameter"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"All"}),": Use ",(0,s.jsx)(r.code,{children:"<ProductCommon>"})," type parameter"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,s.jsx)(r.h3,{id:"fetch-in-app-products",children:"Fetch in-app products"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-dart",children:"// Use explicit type parameter\nfinal products = await FlutterInappPurchase.instance.fetchProducts<Product>(\n  skus: ['coins_100', 'remove_ads'],\n  type: ProductQueryType.InApp,\n);\n\nfor (final product in products) {\n  print('${product.title}: ${product.displayPrice}');\n}\n"})}),"\n",(0,s.jsx)(r.h3,{id:"fetch-subscriptions",children:"Fetch subscriptions"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-dart",children:"// Use explicit type parameter\nfinal subscriptions =\n    await FlutterInappPurchase.instance.fetchProducts<ProductSubscription>(\n  skus: ['premium_monthly', 'premium_yearly'],\n  type: ProductQueryType.Subs,\n);\n\nfor (final sub in subscriptions) {\n  print('${sub.title}: ${sub.displayPrice}');\n  print('Period: ${sub.subscriptionPeriodUnitIOS ?? sub.subscriptionInfoAndroid?.billingPeriod}');\n}\n"})}),"\n",(0,s.jsx)(r.h3,{id:"fetch-both-types",children:"Fetch both types"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-dart",children:"Future<void> loadCatalog() async {\n  // Use explicit type parameter\n  final inAppProducts =\n      await FlutterInappPurchase.instance.fetchProducts<Product>(\n    skus: ['coins_100', 'remove_ads'],\n    type: ProductQueryType.InApp,\n  );\n\n  final subscriptions =\n      await FlutterInappPurchase.instance.fetchProducts<ProductSubscription>(\n    skus: ['premium_monthly'],\n    type: ProductQueryType.Subs,\n  );\n\n  // Combine into a single list if needed\n  final List<ProductCommon> allProducts = [\n    ...inAppProducts,\n    ...subscriptions,\n  ];\n\n  for (final item in allProducts) {\n    debugPrint('Loaded ${item.id} (${item.displayPrice})');\n  }\n}\n"})}),"\n",(0,s.jsx)(r.h3,{id:"fetch-all-products-at-once",children:"Fetch all products at once"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-dart",children:"// Query all products together\nfinal allProducts =\n    await FlutterInappPurchase.instance.fetchProducts<ProductCommon>(\n  skus: ['coins_100', 'remove_ads', 'premium_monthly'],\n  type: ProductQueryType.All,\n);\n\nfor (final item in allProducts) {\n  debugPrint('Loaded ${item.id} (${item.displayPrice})');\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-dart",children:"try {\n  final products =\n      await FlutterInappPurchase.instance.fetchProducts<Product>(\n    skus: productIds,\n    type: ProductQueryType.InApp,\n  );\n\n  if (products.isEmpty) {\n    debugPrint('No products returned for: $productIds');\n  }\n} on PurchaseError catch (error) {\n  switch (error.code) {\n    case ErrorCode.NotPrepared:\n      debugPrint('Call initConnection() before fetching products');\n      break;\n    case ErrorCode.NetworkError:\n      debugPrint('Network error \u2013 prompt the user to retry');\n      break;\n    default:\n      debugPrint('Unexpected store error: ${error.message}');\n  }\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"platform-notes",children:"Platform Notes"}),"\n",(0,s.jsx)(r.h3,{id:"ios",children:"iOS"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Products must be visible in App Store Connect (Ready for Sale or Approved)"}),"\n",(0,s.jsx)(r.li,{children:"The bundle identifier must match the app querying the products"}),"\n",(0,s.jsx)(r.li,{children:"StoreKit 2 caching means results may be served from a local cache on subsequent calls"}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"android",children:"Android"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Products must be active in Google Play Console (Internal Testing track or above)"}),"\n",(0,s.jsx)(r.li,{children:"Billing client v8 requires the app to be signed with a certificate added to Play Console"}),"\n",(0,s.jsx)(r.li,{children:"Only SKUs that belong to the current package can be queried"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"migration-notes",children:"Migration Notes"}),"\n",(0,s.jsx)(r.h3,{id:"from-v6x-to-v70",children:"From v6.x to v7.0"}),"\n",(0,s.jsx)(r.p,{children:"The API now uses generic type parameters for type-safe product fetching:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-dart",children:"// Before (v6.x)\nfinal result = await iap.fetchProducts(\n  ProductRequest(\n    skus: ['product_id'],\n    type: ProductQueryType.InApp,\n  ),\n);\nfinal products = result.value; // or result.products\n\n// After (v7.0) - Use explicit type parameter\nfinal products = await iap.fetchProducts<Product>(\n  skus: ['product_id'],\n  type: ProductQueryType.InApp,\n);\n\n// For subscriptions\nfinal subscriptions = await iap.fetchProducts<ProductSubscription>(\n  skus: ['sub_id'],\n  type: ProductQueryType.Subs,\n);\n"})}),"\n",(0,s.jsx)(r.h3,{id:"key-changes",children:"Key Changes"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsxs)(r.strong,{children:["No more ",(0,s.jsx)(r.code,{children:".value"})," or ",(0,s.jsx)(r.code,{children:".products"})," getters"]})," - The method returns the list directly"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Generic type parameter"})," - Use ",(0,s.jsx)(r.code,{children:"<Product>"}),", ",(0,s.jsx)(r.code,{children:"<ProductSubscription>"}),", or ",(0,s.jsx)(r.code,{children:"<ProductCommon>"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Simplified API"})," - Direct iteration without unwrapping union types"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"related-apis",children:"Related APIs"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"./request-purchase",children:(0,s.jsx)(r.code,{children:"requestPurchase()"})})," \u2013 Start the purchase flow"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"./get-available-purchases",children:(0,s.jsx)(r.code,{children:"getAvailablePurchases()"})})," \u2013 Restore owned items"]}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsxs)(r.a,{href:"../../guides/products#fetchproducts-helper-extensions",children:[(0,s.jsx)(r.code,{children:"fetchProducts()"})," helper extensions"]})}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"../../guides/products",children:"Products Guide"})," \u2013 Designing product catalogs"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"../../guides/subscriptions",children:"Subscriptions Guide"})," \u2013 Subscription-specific flows"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"../../troubleshooting",children:"Troubleshooting"})," \u2013 Diagnostics for common failures"]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>d});var t=n(6540);const s={},i=t.createContext(s);function c(e){const r=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);