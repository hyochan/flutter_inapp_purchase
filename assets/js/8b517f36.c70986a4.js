"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[223],{2809:e=>{e.exports=JSON.parse('{"permalink":"/flutter_inapp_purchase/blog/horizon-os-support","editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/blog/2025-10-28-horizon-os-support.md","source":"@site/blog/2025-10-28-horizon-os-support.md","title":"7.1.13 - Horizon OS Support for Meta Quest Devices","description":"Horizon OS Support","date":"2025-10-28T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/flutter_inapp_purchase/blog/tags/release","description":"New version releases and updates"},{"inline":false,"label":"Flutter","permalink":"/flutter_inapp_purchase/blog/tags/flutter","description":"Flutter framework related topics"},{"inline":false,"label":"In-App Purchase","permalink":"/flutter_inapp_purchase/blog/tags/in-app-purchase","description":"In-app purchase implementation and best practices"},{"inline":true,"label":"horizon-os","permalink":"/flutter_inapp_purchase/blog/tags/horizon-os"},{"inline":true,"label":"meta-quest","permalink":"/flutter_inapp_purchase/blog/tags/meta-quest"},{"inline":false,"label":"OpenIAP","permalink":"/flutter_inapp_purchase/blog/tags/openiap","description":"OpenIAP ecosystem updates"}],"readingTime":4.01,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"Maintainer of flutter_inapp_purchase & expo-iap","url":"https://github.com/hyochan","page":{"permalink":"/flutter_inapp_purchase/blog/authors/hyochan"},"socials":{"x":"https://x.com/hyodotdev","github":"https://github.com/hyochan"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"horizon-os-support","title":"7.1.13 - Horizon OS Support for Meta Quest Devices","authors":["hyochan"],"tags":["release","flutter","in-app-purchase","horizon-os","meta-quest","openiap"],"date":"2025-10-28T00:00:00.000Z"},"unlisted":false,"nextItem":{"title":"Release 7.1.0 - Simplified API with Direct List Returns","permalink":"/flutter_inapp_purchase/blog/7.1.0-release"}}')},5818:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/horizon-780baf2aea9dd1809162ddf4874d554f.png"},7315:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var r=i(2809),s=i(4848),t=i(8453);const o={slug:"horizon-os-support",title:"7.1.13 - Horizon OS Support for Meta Quest Devices",authors:["hyochan"],tags:["release","flutter","in-app-purchase","horizon-os","meta-quest","openiap"],date:new Date("2025-10-28T00:00:00.000Z")},l=void 0,a={authorsImageUrls:[void 0]},d=[{value:"Feature Highlights",id:"feature-highlights",level:2},{value:"What is Horizon OS?",id:"what-is-horizon-os",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Enable Horizon Mode",id:"enable-horizon-mode",level:3},{value:"Configure Horizon App ID",id:"configure-horizon-app-id",level:3},{value:"Update AndroidManifest.xml",id:"update-androidmanifestxml",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Installation",id:"installation",level:3},{value:"Build Commands",id:"build-commands",level:3},{value:"Code Usage",id:"code-usage",level:3},{value:"Under the Hood",id:"under-the-hood",level:2},{value:"Dependency Management",id:"dependency-management",level:3},{value:"Build System",id:"build-system",level:3},{value:"Backward Compatibility",id:"backward-compatibility",level:2},{value:"Testing on Meta Quest",id:"testing-on-meta-quest",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Steps",id:"steps",level:3},{value:"Example App",id:"example-app",level:2},{value:"Platform Support Comparison",id:"platform-support-comparison",level:2},{value:"Documentation",id:"documentation",level:2},{value:"OpenIAP Ecosystem",id:"openiap-ecosystem",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2},{value:"Feedback",id:"feedback",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Horizon OS Support",src:i(5818).A+"",width:"1024",height:"1024"})}),"\n",(0,s.jsx)(n.p,{children:"Flutter In-App Purchase now supports Meta Quest devices with Horizon OS billing, enabling seamless in-app purchases in VR applications using Meta's Platform SDK."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/hyochan/flutter_inapp_purchase/releases/tag/7.1.13",children:"View the release on GitHub \u2192"})}),"\n",(0,s.jsx)(n.h2,{id:"feature-highlights",children:"Feature Highlights"}),"\n",(0,s.jsx)(n.p,{children:"With Horizon OS support, you can now:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Build VR apps for Meta Quest devices (Quest 2, Quest 3, Quest Pro) with in-app purchases"}),"\n",(0,s.jsx)(n.li,{children:"Use the same Flutter In-App Purchase API for both Google Play and Meta Horizon stores"}),"\n",(0,s.jsx)(n.li,{children:"Switch between billing platforms with a simple configuration flag"}),"\n",(0,s.jsx)(n.li,{children:"Distribute apps on both Google Play Store and Meta Horizon Store from a single codebase"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"what-is-horizon-os",children:"What is Horizon OS?"}),"\n",(0,s.jsx)(n.p,{children:"Horizon OS is Meta's operating system for Quest VR devices. With this update, flutter_inapp_purchase now supports Meta's Platform SDK for billing, allowing developers to monetize their VR applications on the Meta Horizon Store."}),"\n",(0,s.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,s.jsxs)(n.p,{children:["The implementation uses OpenIAP's ",(0,s.jsx)(n.code,{children:"openiap-google-horizon"})," wrapper, which provides a unified interface for both Google Play Billing and Meta's Platform SDK. Your existing code remains unchanged - the platform selection happens at build time through product flavors."]}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"enable-horizon-mode",children:"Enable Horizon Mode"}),"\n",(0,s.jsxs)(n.p,{children:["Add to your ",(0,s.jsx)(n.code,{children:"android/gradle.properties"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-properties",children:"# Enable Horizon OS billing\nhorizonEnabled=true\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configure-horizon-app-id",children:"Configure Horizon App ID"}),"\n",(0,s.jsxs)(n.p,{children:["Add your Meta Horizon App ID in ",(0,s.jsx)(n.code,{children:"android/local.properties"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-properties",children:"HORIZON_APP_ID=your_horizon_app_id_here\n"})}),"\n",(0,s.jsx)(n.h3,{id:"update-androidmanifestxml",children:"Update AndroidManifest.xml"}),"\n",(0,s.jsxs)(n.p,{children:["Add the metadata in your ",(0,s.jsx)(n.code,{children:"android/app/src/main/AndroidManifest.xml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<application>\n    \x3c!-- Meta Horizon App ID - injected by Gradle --\x3e\n    <meta-data\n        android:name="com.meta.horizon.platform.ovr.HORIZON_APP_ID"\n        android:value="${HORIZON_APP_ID}" />\n</application>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"flutter pub add flutter_inapp_purchase\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Or add to your ",(0,s.jsx)(n.code,{children:"pubspec.yaml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"dependencies:\n  flutter_inapp_purchase: ^7.1.13\n"})}),"\n",(0,s.jsx)(n.h3,{id:"build-commands",children:"Build Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Build for Google Play Store\nflutter build apk --flavor play\n\n# Build for Meta Horizon Store\nflutter build apk --flavor horizon\n\n# Run on Quest device\nflutter run --flavor horizon -d Quest\n"})}),"\n",(0,s.jsx)(n.h3,{id:"code-usage",children:"Code Usage"}),"\n",(0,s.jsx)(n.p,{children:"No code changes required! The API remains identical across platforms."}),"\n",(0,s.jsxs)(n.p,{children:["The implementation automatically detects the ",(0,s.jsx)(n.code,{children:"horizonEnabled"})," flag and uses:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Google Play Billing"})," when ",(0,s.jsx)(n.code,{children:"horizonEnabled=false"})," (default)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Meta Platform SDK"})," when ",(0,s.jsx)(n.code,{children:"horizonEnabled=true"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"under-the-hood",children:"Under the Hood"}),"\n",(0,s.jsx)(n.h3,{id:"dependency-management",children:"Dependency Management"}),"\n",(0,s.jsxs)(n.p,{children:["The plugin uses conditional dependencies in ",(0,s.jsx)(n.code,{children:"android/build.gradle"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:'dependencies {\n    // Play flavor - Google Play Billing\n    add("playImplementation", "io.github.hyochan.openiap:openiap-google:version")\n\n    // Horizon flavor - Meta Platform SDK\n    add("horizonImplementation", "io.github.hyochan.openiap:openiap-google-horizon:version")\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"build-system",children:"Build System"}),"\n",(0,s.jsx)(n.p,{children:"Product flavors are configured in both the plugin and your app:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Plugin"})," (",(0,s.jsx)(n.code,{children:"flutter_inapp_purchase/android/build.gradle"}),"):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:'android {\n    flavorDimensions "platform"\n    productFlavors {\n        play { dimension "platform"; isDefault = true }\n        horizon { dimension "platform" }\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Your App"})," (",(0,s.jsx)(n.code,{children:"android/app/build.gradle"}),"):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:'android {\n    flavorDimensions "platform"\n    productFlavors {\n        play { /* configuration */ }\n        horizon { /* configuration */ }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"backward-compatibility",children:"Backward Compatibility"}),"\n",(0,s.jsxs)(n.p,{children:["This update is ",(0,s.jsx)(n.strong,{children:"100% backward compatible"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Existing apps using Google Play Billing continue to work without changes"}),"\n",(0,s.jsxs)(n.li,{children:["The default behavior remains Google Play Billing (",(0,s.jsx)(n.code,{children:"horizonEnabled=false"})," by default)"]}),"\n",(0,s.jsx)(n.li,{children:"Horizon support is opt-in through simple configuration flag"}),"\n",(0,s.jsx)(n.li,{children:"No API changes or breaking changes"}),"\n",(0,s.jsx)(n.li,{children:"No product flavors required in your app"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"testing-on-meta-quest",children:"Testing on Meta Quest"}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.oculus.com/",children:"Meta Quest Developer Account"})}),"\n",(0,s.jsx)(n.li,{children:"Quest device with Developer Mode enabled"}),"\n",(0,s.jsxs)(n.li,{children:["Test products configured in ",(0,s.jsx)(n.a,{href:"https://developer.oculus.com/manage/",children:"Meta Quest Developer Dashboard"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"steps",children:"Steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Enable Developer Mode on your Quest device"}),"\n",(0,s.jsxs)(n.li,{children:["Connect via ADB: ",(0,s.jsx)(n.code,{children:"adb devices"})]}),"\n",(0,s.jsx)(n.li,{children:"Configure test products in Meta Quest Developer Dashboard"}),"\n",(0,s.jsxs)(n.li,{children:["Enable Horizon mode in ",(0,s.jsx)(n.code,{children:"android/gradle.properties"}),": ",(0,s.jsx)(n.code,{children:"horizonEnabled=true"})]}),"\n",(0,s.jsxs)(n.li,{children:["Run on Quest: ",(0,s.jsx)(n.code,{children:"flutter run -d Quest"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-app",children:"Example App"}),"\n",(0,s.jsx)(n.p,{children:"Check out the updated example app which demonstrates:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Simple configuration with ",(0,s.jsx)(n.code,{children:"horizonEnabled"})," flag"]}),"\n",(0,s.jsx)(n.li,{children:"No product flavors required"}),"\n",(0,s.jsx)(n.li,{children:"Identical API usage across platforms"}),"\n",(0,s.jsx)(n.li,{children:"Easy platform switching"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Clone the repository\ngit clone https://github.com/hyochan/flutter_inapp_purchase.git\ncd flutter_inapp_purchase/example\n\n# For Google Play (default)\nflutter run\n\n# For Meta Quest\necho "horizonEnabled=true" >> android/gradle.properties\necho "HORIZON_APP_ID=your_app_id" >> android/local.properties\nflutter run -d Quest\n'})}),"\n",(0,s.jsx)(n.h2,{id:"platform-support-comparison",children:"Platform Support Comparison"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feature"}),(0,s.jsx)(n.th,{children:"Google Play"}),(0,s.jsx)(n.th,{children:"Meta Horizon"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"One-time purchases"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Consumables"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Subscriptions"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Purchase verification"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Purchase restoration"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Subscription offers"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Promo codes"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Alternative billing"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"N/A"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Deferred payments"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\u274c"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,s.jsx)(n.p,{children:"Complete documentation for Horizon OS setup:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.openiap.dev/docs/horizon-setup",children:"Horizon OS Setup Guide"})," - Complete setup instructions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://hyochan.github.io/flutter_inapp_purchase/docs/getting-started/quickstart",children:"Quick Start"})," - Getting started guide"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://hyochan.github.io/flutter_inapp_purchase/docs/guides/purchases",children:"Purchases Guide"})," - Purchase implementation"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"openiap-ecosystem",children:"OpenIAP Ecosystem"}),"\n",(0,s.jsx)(n.p,{children:"This feature is powered by the OpenIAP ecosystem:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://central.sonatype.com/artifact/io.github.hyochan.openiap/openiap-google-horizon",children:"openiap-google-horizon"})," - Horizon billing wrapper"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://openiap.dev",children:"OpenIAP Specification"})," - Unified IAP specification"]}),"\n",(0,s.jsx)(n.li,{children:"Cross-platform support: Flutter, React Native, Expo"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The Horizon implementation follows the same OpenIAP specification used across all platforms, ensuring consistent behavior and developer experience."}),"\n",(0,s.jsx)(n.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,s.jsx)(n.p,{children:"We continue to expand platform support and improve developer experience:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Enhanced testing tools for VR development"}),"\n",(0,s.jsx)(n.li,{children:"Better error messages for Horizon-specific issues"}),"\n",(0,s.jsx)(n.li,{children:"Additional documentation and examples"}),"\n",(0,s.jsx)(n.li,{children:"Performance optimizations"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"feedback",children:"Feedback"}),"\n",(0,s.jsx)(n.p,{children:"Try out Horizon OS support and let us know your feedback! If you encounter any issues or have suggestions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/hyochan/flutter_inapp_purchase/issues",children:"GitHub Issues"})," - Report bugs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/hyodotdev/openiap/discussions",children:"OpenIAP Discussions"})," - Spec discussions"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Build amazing VR experiences with seamless in-app purchases on Meta Quest!"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"dependencies:\n  flutter_inapp_purchase: ^7.1.13\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var r=i(6540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);