import groovy.json.JsonSlurper

static File locateOpeniapVersionsFile(File pluginDir, File hostProjectRoot) {
    // First try to find in host app's root directory
    File candidate = new File(hostProjectRoot, 'openiap-versions.json')
    if (candidate.isFile()) {
        return candidate
    }
    // Search upwards from plugin directory (includes plugin's android directory)
    File current = pluginDir
    while (current != null) {
        candidate = new File(current, 'openiap-versions.json')
        if (candidate.isFile()) {
            return candidate
        }
        current = current.getParentFile()
    }
    throw new GradleException(
        "Unable to locate openiap-versions.json. Searched in: ${hostProjectRoot.absolutePath}, ${pluginDir.absolutePath}, and parent directories"
    )
}

def openiapVersionsFile = locateOpeniapVersionsFile(buildscript.sourceFile.parentFile.parentFile, project.rootProject.rootDir)
def openiapVersions = new JsonSlurper().parse(openiapVersionsFile)
def openiapGoogleVersion = openiapVersions['google']

group 'io.github.hyochan.flutter_inapp_purchase'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '2.0.21'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    if (project.android.hasProperty('namespace')) {
        namespace 'io.github.hyochan.flutter_inapp_purchase'
    }
    compileSdkVersion 34

    defaultConfig {
        minSdkVersion 21
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    flavorDimensions "platform"
    productFlavors {
        // Play flavor - Google Play Billing (default)
        play {
            dimension "platform"
            isDefault = true
        }
        // Horizon flavor - Meta Horizon Billing
        horizon {
            dimension "platform"
        }
    }
}

dependencies {
    // OpenIAP Google billing wrapper for Play Store
    add("playImplementation", "io.github.hyochan.openiap:openiap-google:${openiapGoogleVersion}")

    // OpenIAP Google Horizon billing wrapper for Meta Quest
    add("horizonImplementation", "io.github.hyochan.openiap:openiap-google-horizon:${openiapGoogleVersion}")

    // For local debugging with a checked-out module, you can switch to:
    //   implementation project(":openiap")
    // and uncomment the include in android/settings.gradle

    // Amazon IAP only for play flavor (legacy support)
    implementation files('jars/in-app-purchasing-2.0.76.jar')
    implementation 'androidx.annotation:annotation:1.6.0'

    // Google Play Billing for direct API usage (only in play flavor)
    // Note: This is already included in openiap, but kept for backward compatibility
    add("playCompileOnly", "com.android.billingclient:billing-ktx:8.0.0")
}
